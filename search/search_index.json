{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0110\u00e2y l\u00e0 \u0111\u00e2u? \u0110\u00e2y l\u00e0 m\u1ed9t chi\u1ebfc blog nh\u1ecf nh\u1eb1m document technical ch\u1ee7 y\u1ebfu v\u1ec1 frontend development. Ki\u1ebfn th\u1ee9c \u1edf \u0111\u00e2y c\u00f3 \u0111\u00e1ng tin kh\u00f4ng? T\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng. T\u1ea5t c\u1ea3 ki\u1ebfn th\u1ee9c d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec1u \u0111\u01b0\u1ee3c t\u1ed5ng h\u1ee3p v\u00e0 m\u00ecnh kh\u00f4ng \u0111\u1ea3m b\u1ea3o t\u1ea5t c\u1ea3 ch\u00ednh x\u00e1c.","title":"Home"},{"location":"#ay-la-au","text":"\u0110\u00e2y l\u00e0 m\u1ed9t chi\u1ebfc blog nh\u1ecf nh\u1eb1m document technical ch\u1ee7 y\u1ebfu v\u1ec1 frontend development.","title":"\u0110\u00e2y l\u00e0 \u0111\u00e2u?"},{"location":"#kien-thuc-o-ay-co-ang-tin-khong","text":"T\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng. T\u1ea5t c\u1ea3 ki\u1ebfn th\u1ee9c d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec1u \u0111\u01b0\u1ee3c t\u1ed5ng h\u1ee3p v\u00e0 m\u00ecnh kh\u00f4ng \u0111\u1ea3m b\u1ea3o t\u1ea5t c\u1ea3 ch\u00ednh x\u00e1c.","title":"Ki\u1ebfn th\u1ee9c \u1edf \u0111\u00e2y c\u00f3 \u0111\u00e1ng tin kh\u00f4ng?"},{"location":"clean-code/design-patterns/","text":"Design Pattern l\u00e0 g\u00ec? L\u00e0 m\u1eabu gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 hay g\u1eb7p do c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean l\u00fac tr\u01b0\u1edbc r\u00fat ra. Gi\u00fap t\u1ed5 ch\u1ee9c code t\u1ed1t h\u01a1n. C\u00f3 3 lo\u1ea1i: creational, structual, behavioural (c\u00e1ch giao ti\u1ebfp) C\u00e1c design pattern hay d\u00f9ng: Factory, Facade, Singleton, Observer Singleton n\u1ebfu d\u00f9ng trong m\u00f4i tr\u01b0\u1eddng multithread, bypass private constructor Angular (DI, IOC) \u0110\u1eebng qu\u00e1 l\u1ea1m d\u1ee5ng Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng th\u00eam v\u1ea5n \u0111\u1ec1 Anti-pattern Nh\u00f3m kh\u1edfi t\u1ea1o (Creational Pattern) Singleton M\u1ed7i class ch\u1ec9 c\u00f3 t\u1ea1o m\u1ed9t instance S\u1eed d\u1ee5ng cho logging, configuration, thread pool, database connections, ... class Settings { static instance: Settings; public readonly mode = \"dark\"; private constructor() {} static getInstance(): Settings { if (!Settings.instance) { Settings.instance = new Settings(); } return Settings.instance; } } const settings = Settings.getInstance(); Tuy nhi\u00ean, c\u00e1ch d\u00f9ng n\u00e0y ch\u1ec9 s\u1eed d\u1ee5ng t\u1ed1t cho single-thread, trong tr\u01b0\u1eddng h\u1ee3p multi-thread th\u00ec s\u1ebd kh\u00f4ng \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c ch\u1ec9 c\u00f3 1 instance. \u0110\u1ec3 kh\u1eafc ph\u1ee5c ta s\u1eed d\u1ee5ng Thread Safe Singleton. S\u1eed d\u1ee5ng keyword synchronized, tuy nhi\u00ean c\u00e1ch n\u00e0y s\u1ebd ch\u1eadm v\u00ec b\u1ea5t k\u1ef3 thread n\u00e0o g\u1ecdi \u0111\u1ebfn \u0111\u1ec1u ph\u1ea3i ch\u1edd m\u1ed9t thread kh\u00e1c \u0111ang s\u1eed d\u1ee5ng. Factory Method \u0110\u1ecbnh ngh\u0129a interface cho s\u1eed d\u1ee5ng object. Thay v\u00ec s\u1eed d\u1ee5ng t\u1eeb kh\u00f3a new \u0111\u1ec3 kh\u1edfi t\u1ea1o m\u1ed9t object, s\u1eed d\u1ee5ng function ho\u1eb7c method S\u1eed d\u1ee5ng khi c\u00f3 nhi\u1ec1u lo\u1ea1i \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ea7n kh\u1edfi t\u1ea1o (Ex: c\u00e1c lo\u1ea1i column) D\u1ec5 m\u1edf r\u1ed9ng, ch\u1ec9 c\u1ea7n t\u1ea1o ra class m\u1edbi v\u00e0 implement v\u00e0o factory method class IOSButton {} class AndroidButton {} const button1 = os === \"ios\" ? new IOSButton() : new AndroidButton(); const button2 = os === \"ios\" ? new IOSButton() : new AndroidButton(); class ButtonFactory { createButton(os: string): IOSButton | AndroidButton { if (os === \"ios\") { return new IOSButton(); } else { return new AndroidButton(); } } } const factory = new ButtonFactory(); const button1 = factory.createButton(os); Abstract Factory Factory c\u1ee7a factory Prototype Clone object hi\u1ec7n t\u1ea1i ch\u1ee9 kh\u00f4ng t\u1ea1o m\u1edbi N\u1ebfu c\u00f3 m\u1ed9t object ph\u1ee9c t\u1ea1p v\u00e0 m\u1ea5t nhi\u1ec1u th\u1eddi gian config. S\u1eed d\u1ee5ng prototype \u0111\u1ec3 clone object \u0111\u00f3. class ConcretePrototype { private property: string; constructor(property: string) { this.property = property; } clone() { return new ConcretePrototype(this.property); } } const originalObj = new ConcretePrototype(\"Original\"); const clonedObj = originalObj.clone(); Builder Truy\u1ec1n v\u00e0o tham s\u1ed1 trong constructor, nh\u01b0ng n\u1ebfu c\u00f3 nhi\u1ec1u tham s\u1ed1 th\u00ec kh\u00f3 keep tracks t\u1ea5t c\u1ea3 c\u00e1c options. V\u1edbi builder pattern gi\u00fap t\u1ea1o step by step s\u1eed d\u1ee5ng method V\u1ea5n \u0111\u1ec1 c\u1ee7a Factory Pattern v\u00e0 Abstract Factory Pattern l\u00e0 khi c\u00f3 qu\u00e1 nhi\u1ec1u thu\u1ed9c t\u00ednh th\u00ec khi truy\u1ec1n v\u00e0o factory ph\u1ea3i truy\u1ec1n t\u1ea5t c\u1ea3 tham s\u1ed1 n\u1ebfu kh\u00f4ng th\u00ec null Khi c\u00f3 nhi\u1ec1u constructor, h\u00e3y ngh\u0129 t\u1edbi Builder class BanhMi { constructor(cha: string, pate: string, rau: string, sot: string) {} addCha(cha: string) { this.cha = cha; return this; } addPate(pate: string) { this.pate = pate; return this; } addRau(rau: string) { this.rau = rau; return this; } addSot(sot: string) { this.sot = sot; return this; } } new BanhMi(\"lua\", \"heo\", \"can tay\", \"bo bam\"); const banhMi = new BanhMi(); // Method chaining banhMi.addCha(\"gan\").addSot(\"ca chua\"); Nh\u00f3m c\u1ea5u tr\u00fac (Structural Patter) Adapter Adapter Pattern cho ph\u00e9p c\u00e1c objects v\u1edbi interface kh\u00f4ng li\u00ean quan c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c c\u00f9ng nhau. Adapter gi\u1eef vai tr\u00f2 trung gian gi\u1eefa 2 objects. H\u1eefu d\u1ee5ng khi integrate m\u1ed9t class v\u1edbi h\u1ec7 th\u1ed1ng c\u00f3 s\u1eb5n nh\u01b0ng interface c\u1ee7a class kh\u00f4ng match v\u1edbi h\u1ec7 th\u1ed1ng. \u0110\u1ea3m b\u1ea3o nguy\u00ean t\u00e1c Open/Close c\u1ee7a SOLID class FileLogger { writeToFile(message: string): void {} } interface ILogger { log(message: string): void {} } class LoggerAdapter implements ILogger { fileLogger: FileLogger; log(message: string): void { fileLogger.writeToFile(message); } } Bridge T\u00e1ch abstraction ra kh\u1ecfi implementation. Composite Nh\u00f3m \u0111\u1ed1i t\u01b0\u1ee3ng theo c\u1ea5u tr\u00fac c\u00e2y Decorator Cho ph\u00e9p th\u00eam ch\u1ee9c n\u0103ng m\u1edbi v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng hi\u1ec7n t\u1ea1i m\u00e0 kh\u00f4ng mu\u1ed1n \u1ea3nh h\u01b0\u1edfng t\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c. M\u1ed7i khi c\u1ea7n th\u00eam t\u00ednh n\u0103ng m\u1edbi, \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c b\u1ecdc trong m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi. interface Coffee() { cost(): number; } class SimpleCoffee implements Coffee { cost(): number { return 5; } } class MilkDecorator implements Coffee { private coffee: Coffee; constructor(coffee: Coffee) { this.coffee = coffee; } cost(): number { return this.coffee.cost() + 1; } } Facade Cung c\u1ea5p m\u1ed9t interface \u0111\u01a1n gi\u1ea3n cho m\u1ed9t h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p class, library ho\u1eb7c framework. Hide low-level details Nh\u00f3m t\u01b0\u01a1ng t\u00e1c (Behavioural Pattern) Chain of Responsibility Truy\u1ec1n request qua m\u1ed9t chain handlers \u0111\u1ebfn khi handle request Iterator Cho ph\u00e9p duy\u1ec7t tu\u1ea7n t\u1ef1 qua c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p kh\u00f4ng \u0111\u1ec3 l\u1ed9 n\u1ed9i dung b\u00ean trong Proxy Cung c\u1ea5p m\u1ed9t object nh\u01b0 l\u00e0 b\u1ea3n sao c\u1ee7a m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng. Proxy s\u1ebd nh\u1eadn client requests, l\u00e0m g\u00ec \u0111\u00f3 xong truy\u1ec1n l\u1ea1i cho object th\u1eadt State Cho ph\u00e9p m\u1ed9t object thay \u0111\u1ed5i behaviour khi m\u00e0 state thay \u0111\u1ed5i. State pattern t\u00e1ch class th\u00e0nh behaviour ri\u00eang v\u00e0 giao cho l\u1edbp con th\u1ef1c hi\u1ec7n class OrderContext { state: OrderState; constructor() { this.state = new PendingState(this); } setState(state: OrderState) { this.state = state; } processOrder() { this.state.processOrder(); } } interface OrderState() { processOrder(); } class PendingState implements OrderState { context: OrderContext; constructor(context: OrderContext) { this.context = context; } processOrder() { } } Template method \u0110\u1ecbnh ngh\u0129a khung cho m\u1ed9t thu\u1eadt to\u00e1n trong m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c. C\u00e1c l\u1edbp con c\u00f3 th\u1ec3 thay \u0111\u1ed5i m\u1ed9t s\u1ed1 b\u01b0\u1edbc m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i c\u1ea5u tr\u00fac chung Observer Th\u00f4ng b\u00e1o \u0111\u1ebfn c\u00e1c objects kh\u00e1c khi state thay \u0111\u1ed5i S\u1eed d\u1ee5ng khi react m\u1ed9t s\u1ef1 ki\u1ec7n, eventListener Observer Pattern c\u00f2n g\u1ecdi l\u00e0 Pub/Sub class DataService { private data: string; private observers: Observer[] = []; add(observer: Observer) { this.observers.push(observer); } notify() { this.observers.forEach((observer) => observer.update(this.data)); } }","title":"Design Patterns"},{"location":"clean-code/design-patterns/#design-pattern-la-gi","text":"L\u00e0 m\u1eabu gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 hay g\u1eb7p do c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean l\u00fac tr\u01b0\u1edbc r\u00fat ra. Gi\u00fap t\u1ed5 ch\u1ee9c code t\u1ed1t h\u01a1n. C\u00f3 3 lo\u1ea1i: creational, structual, behavioural (c\u00e1ch giao ti\u1ebfp) C\u00e1c design pattern hay d\u00f9ng: Factory, Facade, Singleton, Observer Singleton n\u1ebfu d\u00f9ng trong m\u00f4i tr\u01b0\u1eddng multithread, bypass private constructor Angular (DI, IOC) \u0110\u1eebng qu\u00e1 l\u1ea1m d\u1ee5ng Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng th\u00eam v\u1ea5n \u0111\u1ec1 Anti-pattern","title":"Design Pattern l\u00e0 g\u00ec?"},{"location":"clean-code/design-patterns/#nhom-khoi-tao-creational-pattern","text":"","title":"Nh\u00f3m kh\u1edfi t\u1ea1o (Creational Pattern)"},{"location":"clean-code/design-patterns/#singleton","text":"M\u1ed7i class ch\u1ec9 c\u00f3 t\u1ea1o m\u1ed9t instance S\u1eed d\u1ee5ng cho logging, configuration, thread pool, database connections, ... class Settings { static instance: Settings; public readonly mode = \"dark\"; private constructor() {} static getInstance(): Settings { if (!Settings.instance) { Settings.instance = new Settings(); } return Settings.instance; } } const settings = Settings.getInstance(); Tuy nhi\u00ean, c\u00e1ch d\u00f9ng n\u00e0y ch\u1ec9 s\u1eed d\u1ee5ng t\u1ed1t cho single-thread, trong tr\u01b0\u1eddng h\u1ee3p multi-thread th\u00ec s\u1ebd kh\u00f4ng \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c ch\u1ec9 c\u00f3 1 instance. \u0110\u1ec3 kh\u1eafc ph\u1ee5c ta s\u1eed d\u1ee5ng Thread Safe Singleton. S\u1eed d\u1ee5ng keyword synchronized, tuy nhi\u00ean c\u00e1ch n\u00e0y s\u1ebd ch\u1eadm v\u00ec b\u1ea5t k\u1ef3 thread n\u00e0o g\u1ecdi \u0111\u1ebfn \u0111\u1ec1u ph\u1ea3i ch\u1edd m\u1ed9t thread kh\u00e1c \u0111ang s\u1eed d\u1ee5ng.","title":"Singleton"},{"location":"clean-code/design-patterns/#factory-method","text":"\u0110\u1ecbnh ngh\u0129a interface cho s\u1eed d\u1ee5ng object. Thay v\u00ec s\u1eed d\u1ee5ng t\u1eeb kh\u00f3a new \u0111\u1ec3 kh\u1edfi t\u1ea1o m\u1ed9t object, s\u1eed d\u1ee5ng function ho\u1eb7c method S\u1eed d\u1ee5ng khi c\u00f3 nhi\u1ec1u lo\u1ea1i \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ea7n kh\u1edfi t\u1ea1o (Ex: c\u00e1c lo\u1ea1i column) D\u1ec5 m\u1edf r\u1ed9ng, ch\u1ec9 c\u1ea7n t\u1ea1o ra class m\u1edbi v\u00e0 implement v\u00e0o factory method class IOSButton {} class AndroidButton {} const button1 = os === \"ios\" ? new IOSButton() : new AndroidButton(); const button2 = os === \"ios\" ? new IOSButton() : new AndroidButton(); class ButtonFactory { createButton(os: string): IOSButton | AndroidButton { if (os === \"ios\") { return new IOSButton(); } else { return new AndroidButton(); } } } const factory = new ButtonFactory(); const button1 = factory.createButton(os);","title":"Factory Method"},{"location":"clean-code/design-patterns/#abstract-factory","text":"Factory c\u1ee7a factory","title":"Abstract Factory"},{"location":"clean-code/design-patterns/#prototype","text":"Clone object hi\u1ec7n t\u1ea1i ch\u1ee9 kh\u00f4ng t\u1ea1o m\u1edbi N\u1ebfu c\u00f3 m\u1ed9t object ph\u1ee9c t\u1ea1p v\u00e0 m\u1ea5t nhi\u1ec1u th\u1eddi gian config. S\u1eed d\u1ee5ng prototype \u0111\u1ec3 clone object \u0111\u00f3. class ConcretePrototype { private property: string; constructor(property: string) { this.property = property; } clone() { return new ConcretePrototype(this.property); } } const originalObj = new ConcretePrototype(\"Original\"); const clonedObj = originalObj.clone();","title":"Prototype"},{"location":"clean-code/design-patterns/#builder","text":"Truy\u1ec1n v\u00e0o tham s\u1ed1 trong constructor, nh\u01b0ng n\u1ebfu c\u00f3 nhi\u1ec1u tham s\u1ed1 th\u00ec kh\u00f3 keep tracks t\u1ea5t c\u1ea3 c\u00e1c options. V\u1edbi builder pattern gi\u00fap t\u1ea1o step by step s\u1eed d\u1ee5ng method V\u1ea5n \u0111\u1ec1 c\u1ee7a Factory Pattern v\u00e0 Abstract Factory Pattern l\u00e0 khi c\u00f3 qu\u00e1 nhi\u1ec1u thu\u1ed9c t\u00ednh th\u00ec khi truy\u1ec1n v\u00e0o factory ph\u1ea3i truy\u1ec1n t\u1ea5t c\u1ea3 tham s\u1ed1 n\u1ebfu kh\u00f4ng th\u00ec null Khi c\u00f3 nhi\u1ec1u constructor, h\u00e3y ngh\u0129 t\u1edbi Builder class BanhMi { constructor(cha: string, pate: string, rau: string, sot: string) {} addCha(cha: string) { this.cha = cha; return this; } addPate(pate: string) { this.pate = pate; return this; } addRau(rau: string) { this.rau = rau; return this; } addSot(sot: string) { this.sot = sot; return this; } } new BanhMi(\"lua\", \"heo\", \"can tay\", \"bo bam\"); const banhMi = new BanhMi(); // Method chaining banhMi.addCha(\"gan\").addSot(\"ca chua\");","title":"Builder"},{"location":"clean-code/design-patterns/#nhom-cau-truc-structural-patter","text":"","title":"Nh\u00f3m c\u1ea5u tr\u00fac (Structural Patter)"},{"location":"clean-code/design-patterns/#adapter","text":"Adapter Pattern cho ph\u00e9p c\u00e1c objects v\u1edbi interface kh\u00f4ng li\u00ean quan c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c c\u00f9ng nhau. Adapter gi\u1eef vai tr\u00f2 trung gian gi\u1eefa 2 objects. H\u1eefu d\u1ee5ng khi integrate m\u1ed9t class v\u1edbi h\u1ec7 th\u1ed1ng c\u00f3 s\u1eb5n nh\u01b0ng interface c\u1ee7a class kh\u00f4ng match v\u1edbi h\u1ec7 th\u1ed1ng. \u0110\u1ea3m b\u1ea3o nguy\u00ean t\u00e1c Open/Close c\u1ee7a SOLID class FileLogger { writeToFile(message: string): void {} } interface ILogger { log(message: string): void {} } class LoggerAdapter implements ILogger { fileLogger: FileLogger; log(message: string): void { fileLogger.writeToFile(message); } }","title":"Adapter"},{"location":"clean-code/design-patterns/#bridge","text":"T\u00e1ch abstraction ra kh\u1ecfi implementation.","title":"Bridge"},{"location":"clean-code/design-patterns/#composite","text":"Nh\u00f3m \u0111\u1ed1i t\u01b0\u1ee3ng theo c\u1ea5u tr\u00fac c\u00e2y","title":"Composite"},{"location":"clean-code/design-patterns/#decorator","text":"Cho ph\u00e9p th\u00eam ch\u1ee9c n\u0103ng m\u1edbi v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng hi\u1ec7n t\u1ea1i m\u00e0 kh\u00f4ng mu\u1ed1n \u1ea3nh h\u01b0\u1edfng t\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c. M\u1ed7i khi c\u1ea7n th\u00eam t\u00ednh n\u0103ng m\u1edbi, \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c b\u1ecdc trong m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi. interface Coffee() { cost(): number; } class SimpleCoffee implements Coffee { cost(): number { return 5; } } class MilkDecorator implements Coffee { private coffee: Coffee; constructor(coffee: Coffee) { this.coffee = coffee; } cost(): number { return this.coffee.cost() + 1; } }","title":"Decorator"},{"location":"clean-code/design-patterns/#facade","text":"Cung c\u1ea5p m\u1ed9t interface \u0111\u01a1n gi\u1ea3n cho m\u1ed9t h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p class, library ho\u1eb7c framework. Hide low-level details","title":"Facade"},{"location":"clean-code/design-patterns/#nhom-tuong-tac-behavioural-pattern","text":"","title":"Nh\u00f3m t\u01b0\u01a1ng t\u00e1c (Behavioural Pattern)"},{"location":"clean-code/design-patterns/#chain-of-responsibility","text":"Truy\u1ec1n request qua m\u1ed9t chain handlers \u0111\u1ebfn khi handle request","title":"Chain of Responsibility"},{"location":"clean-code/design-patterns/#iterator","text":"Cho ph\u00e9p duy\u1ec7t tu\u1ea7n t\u1ef1 qua c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p kh\u00f4ng \u0111\u1ec3 l\u1ed9 n\u1ed9i dung b\u00ean trong","title":"Iterator"},{"location":"clean-code/design-patterns/#proxy","text":"Cung c\u1ea5p m\u1ed9t object nh\u01b0 l\u00e0 b\u1ea3n sao c\u1ee7a m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng. Proxy s\u1ebd nh\u1eadn client requests, l\u00e0m g\u00ec \u0111\u00f3 xong truy\u1ec1n l\u1ea1i cho object th\u1eadt","title":"Proxy"},{"location":"clean-code/design-patterns/#state","text":"Cho ph\u00e9p m\u1ed9t object thay \u0111\u1ed5i behaviour khi m\u00e0 state thay \u0111\u1ed5i. State pattern t\u00e1ch class th\u00e0nh behaviour ri\u00eang v\u00e0 giao cho l\u1edbp con th\u1ef1c hi\u1ec7n class OrderContext { state: OrderState; constructor() { this.state = new PendingState(this); } setState(state: OrderState) { this.state = state; } processOrder() { this.state.processOrder(); } } interface OrderState() { processOrder(); } class PendingState implements OrderState { context: OrderContext; constructor(context: OrderContext) { this.context = context; } processOrder() { } }","title":"State"},{"location":"clean-code/design-patterns/#template-method","text":"\u0110\u1ecbnh ngh\u0129a khung cho m\u1ed9t thu\u1eadt to\u00e1n trong m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c. C\u00e1c l\u1edbp con c\u00f3 th\u1ec3 thay \u0111\u1ed5i m\u1ed9t s\u1ed1 b\u01b0\u1edbc m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i c\u1ea5u tr\u00fac chung","title":"Template method"},{"location":"clean-code/design-patterns/#observer","text":"Th\u00f4ng b\u00e1o \u0111\u1ebfn c\u00e1c objects kh\u00e1c khi state thay \u0111\u1ed5i S\u1eed d\u1ee5ng khi react m\u1ed9t s\u1ef1 ki\u1ec7n, eventListener Observer Pattern c\u00f2n g\u1ecdi l\u00e0 Pub/Sub class DataService { private data: string; private observers: Observer[] = []; add(observer: Observer) { this.observers.push(observer); } notify() { this.observers.forEach((observer) => observer.update(this.data)); } }","title":"Observer"},{"location":"clean-code/introduction/","text":"Clean code l\u00e0 g\u00ec? C\u00e1ch code d\u1ec5 \u0111\u1ecdc, d\u1ec5 hi\u1ec3u, d\u1ec5 b\u1ea3o tr\u00ec, d\u1ec5 hi\u1ec3u cho t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi trong team. D\u1ec5 d\u00e0ng \u0111\u1ec3 c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean kh\u00e1c, ho\u1eb7c ch\u00ednh m\u00ecnh trong t\u01b0\u01a1ng lai hi\u1ec3u v\u00e0 s\u1eeda kh\u00f4ng g\u1eb7p kh\u00f3 kh\u0103n. In clean code, bugs cannot hide Principles Loose Coupling High Cohesive (Cohesive is the degree to which elements of a whole belong together). Cohesive l\u00e0 m\u1ee9c \u0111\u1ed9 nh\u1eefng ph\u1ea7n t\u1eed trong m\u1ed9t class/module ph\u1ea3i thu\u1ed9c v\u1ec1 nhau, c\u00f3 c\u00f9ng m\u1ed9t ch\u1ee9c n\u0103ng. M\u1ed9t class high cohesive s\u1ebd t\u1eadp trung v\u00e0o c\u00e1c nhi\u1ec7m v\u1ee5 li\u00ean quan ch\u1eb7t ch\u1ebd Mind-sized Components Smells Rigidity: m\u1ed9t thay \u0111\u1ed5i nh\u1ecf g\u00e2y ra thay \u0111\u1ed5i \u1edf nhi\u1ec1u ph\u1ea7n kh\u00e1c, khi\u1ebfn cho vi\u1ec7c thay \u0111\u1ed5i tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p v\u00e0 t\u1ed1n k\u00e9m Fragility: thay \u0111\u1ed5i nh\u1ecf, nhi\u1ec1u ph\u1ea7n kh\u00e1c b\u1ecb l\u1ed7i Immobility: kh\u00f4ng th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng c\u00e1c ph\u1ea7n c\u1ee7a code Class Design S (m\u1ed7i class n\u00ean ch\u1ec9 c\u00f3 m\u1ed9t l\u00fd do \u0111\u1ec3 thay \u0111\u1ed5i) O (Open for extension, close for modification) L (L\u1edbp con c\u00f3 th\u1ec3 thay th\u1ebf l\u1edbp cha m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh) I (Chia nh\u1ecf interface h\u1ee3p l\u00fd, \u0111\u1ec3 m\u1ed9t class ch\u1ec9 implement c\u00e1c interface c\u1ea7n thi\u1ebft) D (Dependency Inversion), (kh\u00f4ng n\u00ean ph\u1ee5 thu\u1ed9c tr\u1ef1c ti\u1ebfp m\u00e0 ph\u1ee5 thu\u1ed9c v\u00e0o abstractions) General DRY (Don't repeat your self) KISS (Keep it simple, stupid) Naming \u0110\u1eb7t t\u00ean bi\u1ebfn theo \u0111\u00fang ch\u1ee9c n\u0103ng c\u1ee7a function ho\u1eb7c class Use Long Names for Long Scopes (\u0111\u1ed9 d\u00e0i c\u1ee7a t\u00ean bi\u1ebfn ph\u1ee5 thu\u1ed9c v\u00e0o v\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3) \u0110\u1eb7t t\u00ean bi\u1ebfn cho class \u0111\u1eb7t l\u00e0 danh t\u1eeb, \u0111\u1eb7t t\u00ean bi\u1ebfn cho method \u0111\u1ed9ng t\u1eeb + danh t\u1eeb Method Method n\u00ean l\u00e0m 1 vi\u1ec7c Kh\u00f4ng n\u00ean truy\u1ec1n qu\u00e1 nhi\u1ec1u arguments v\u00e0o method Kh\u00f4ng ph\u00f9 h\u1ee3p static Understandability Consistency Maintainability Killers Kh\u00f4ng duplicate Kh\u00f4ng s\u1eed d\u1ee5ng Magic numbers m\u00e0 s\u1eed d\u1ee5ng constant Exception Handling S\u1eed d\u1ee5ng Exceptions thay v\u00ec return Codes ho\u1eb7c null","title":"Introduction"},{"location":"clean-code/introduction/#clean-code-la-gi","text":"C\u00e1ch code d\u1ec5 \u0111\u1ecdc, d\u1ec5 hi\u1ec3u, d\u1ec5 b\u1ea3o tr\u00ec, d\u1ec5 hi\u1ec3u cho t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi trong team. D\u1ec5 d\u00e0ng \u0111\u1ec3 c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean kh\u00e1c, ho\u1eb7c ch\u00ednh m\u00ecnh trong t\u01b0\u01a1ng lai hi\u1ec3u v\u00e0 s\u1eeda kh\u00f4ng g\u1eb7p kh\u00f3 kh\u0103n. In clean code, bugs cannot hide","title":"Clean code l\u00e0 g\u00ec?"},{"location":"clean-code/introduction/#principles","text":"Loose Coupling High Cohesive (Cohesive is the degree to which elements of a whole belong together). Cohesive l\u00e0 m\u1ee9c \u0111\u1ed9 nh\u1eefng ph\u1ea7n t\u1eed trong m\u1ed9t class/module ph\u1ea3i thu\u1ed9c v\u1ec1 nhau, c\u00f3 c\u00f9ng m\u1ed9t ch\u1ee9c n\u0103ng. M\u1ed9t class high cohesive s\u1ebd t\u1eadp trung v\u00e0o c\u00e1c nhi\u1ec7m v\u1ee5 li\u00ean quan ch\u1eb7t ch\u1ebd Mind-sized Components","title":"Principles"},{"location":"clean-code/introduction/#smells","text":"Rigidity: m\u1ed9t thay \u0111\u1ed5i nh\u1ecf g\u00e2y ra thay \u0111\u1ed5i \u1edf nhi\u1ec1u ph\u1ea7n kh\u00e1c, khi\u1ebfn cho vi\u1ec7c thay \u0111\u1ed5i tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p v\u00e0 t\u1ed1n k\u00e9m Fragility: thay \u0111\u1ed5i nh\u1ecf, nhi\u1ec1u ph\u1ea7n kh\u00e1c b\u1ecb l\u1ed7i Immobility: kh\u00f4ng th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng c\u00e1c ph\u1ea7n c\u1ee7a code","title":"Smells"},{"location":"clean-code/introduction/#class-design","text":"S (m\u1ed7i class n\u00ean ch\u1ec9 c\u00f3 m\u1ed9t l\u00fd do \u0111\u1ec3 thay \u0111\u1ed5i) O (Open for extension, close for modification) L (L\u1edbp con c\u00f3 th\u1ec3 thay th\u1ebf l\u1edbp cha m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i t\u00ednh \u0111\u00fang \u0111\u1eafn c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh) I (Chia nh\u1ecf interface h\u1ee3p l\u00fd, \u0111\u1ec3 m\u1ed9t class ch\u1ec9 implement c\u00e1c interface c\u1ea7n thi\u1ebft) D (Dependency Inversion), (kh\u00f4ng n\u00ean ph\u1ee5 thu\u1ed9c tr\u1ef1c ti\u1ebfp m\u00e0 ph\u1ee5 thu\u1ed9c v\u00e0o abstractions)","title":"Class Design"},{"location":"clean-code/introduction/#general","text":"DRY (Don't repeat your self) KISS (Keep it simple, stupid)","title":"General"},{"location":"clean-code/introduction/#naming","text":"\u0110\u1eb7t t\u00ean bi\u1ebfn theo \u0111\u00fang ch\u1ee9c n\u0103ng c\u1ee7a function ho\u1eb7c class Use Long Names for Long Scopes (\u0111\u1ed9 d\u00e0i c\u1ee7a t\u00ean bi\u1ebfn ph\u1ee5 thu\u1ed9c v\u00e0o v\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3) \u0110\u1eb7t t\u00ean bi\u1ebfn cho class \u0111\u1eb7t l\u00e0 danh t\u1eeb, \u0111\u1eb7t t\u00ean bi\u1ebfn cho method \u0111\u1ed9ng t\u1eeb + danh t\u1eeb","title":"Naming"},{"location":"clean-code/introduction/#method","text":"Method n\u00ean l\u00e0m 1 vi\u1ec7c Kh\u00f4ng n\u00ean truy\u1ec1n qu\u00e1 nhi\u1ec1u arguments v\u00e0o method Kh\u00f4ng ph\u00f9 h\u1ee3p static","title":"Method"},{"location":"clean-code/introduction/#understandability","text":"Consistency","title":"Understandability"},{"location":"clean-code/introduction/#maintainability-killers","text":"Kh\u00f4ng duplicate Kh\u00f4ng s\u1eed d\u1ee5ng Magic numbers m\u00e0 s\u1eed d\u1ee5ng constant","title":"Maintainability Killers"},{"location":"clean-code/introduction/#exception-handling","text":"S\u1eed d\u1ee5ng Exceptions thay v\u00ec return Codes ho\u1eb7c null","title":"Exception Handling"},{"location":"frontend/angular/","text":"L\u1ecbch s\u1eed Angular 2010: \u0111\u01b0\u1ee3c support b\u1edfi Google, SPA, kh\u00f4ng c\u00f2n ph\u1ee5 thu\u1ed9c v\u00e0o server, Iconic h\u1ee3p t\u00e1c 2014 - 2015: Angular ch\u1ea1m ng\u01b0\u1ee1ng, chu\u1ea9n m\u1edbi c\u1ee7a JS, Angular tr\u1edf n\u00ean tu\u1ed9t h\u1eadu, x\u00e2y d\u1ef1ng l\u1ea1i to\u00e0n b\u1ed9 2016: kh\u00f4ng bi\u1ebft maintain, l\u00e0m sao migrate t\u1eeb Angular.js, c\u00fa ph\u00e1p xa l\u1ea1 Angular 2.0 2018: Improve v\u00e0 ra nhi\u1ec1u b\u1ea3n c\u1eadp nh\u1eadt m\u1edbi Module, component NgModule l\u00e0 m\u1ed9t decorator \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh m\u1ed9t module. Th\u00e0nh ph\u1ea7n c\u1ee7a NgModule g\u1ed3m declarations, imports, exports, providers, bootstrap NgComponent: qu\u1ea3n l\u00fd m\u1ed9t ph\u1ea7n giao di\u1ec7n, ch\u1ee9a logic v\u00e0 s\u1eed l\u00fd s\u1ef1 ki\u1ec7n. Component c\u00f3 th\u1ec3 l\u1ed3ng nhau. Standalone component gi\u00fap component t\u1ef1 qu\u1ea3n l\u00fd dependencies, lo\u1ea1i b\u1ecf s\u1ef1 ph\u1ee5 thu\u1ed9c v\u00e0o module. Directives Component Directive: l\u00e0 component trong angular Structural Directive: thay \u0111\u1ed5i c\u1ea5u tr\u00fac c\u1ee7a DOM b\u1eb1ng th\u00eam, x\u00f3a ho\u1eb7c thay \u0111\u1ed5i ph\u1ea7n t\u1eed trong DOM Attribute Directive: thay \u0111\u1ed5i giao di\u1ec7n ho\u1eb7c h\u00e0nh vi HTML, s\u1eed d\u1ee5ng v\u1edbi decorator Directive Angular lifecycle hooks Constructor (khai b\u00e1o dependency injection) ngOnChanges (g\u1ecdi khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb Input c\u1ee7a component) ngOnInit (g\u1ecdi duy nh\u1ea5t 1 l\u1ea7n \u0111\u1ec3 kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb cho bi\u1ebfn, call api, kh\u1edfi t\u1ea1o form, ...) ngDoCheck ngAfterContentInit ngAfterContentChecked ngAfterViewInit ngAfterViewChecked ngOnDestroy Binding [property-binding] (event-binding) Routing \u0110i\u1ec1u h\u01b0\u1edbng component theo URL router-outlet routerLink Dependency Injection DI l\u00e0 m\u1ed9t design pattern t\u00e1ch vi\u1ec7c kh\u1edfi t\u1ea1o ra vi\u1ec7c s\u1eed d\u1ee5ng, gi\u00fap d\u1ec5 b\u1ea3o tr\u00ec. C\u00e1c th\u00e0nh ph\u1ea7n ch\u00ednh trong DI: Provider, Injector, Token, Dependency M\u1ed9t class c\u00f3 th\u1ec3 \u0111\u0103ng k\u00fd s\u1eed d\u1ee5ng dependency th\u00f4ng constructor Khi component \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, Angular s\u1ebd inject m\u1ed9t instance c\u1ee7a service v\u00e0o constructor Service Inject dependencies Rxjs (map, of, from) Rxjs l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n \u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi reactive programming b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Observable. Gi\u00fap x\u1eed l\u00fd c\u00e1c lu\u1ed3ng s\u1ef1 ki\u1ec7n b\u1ea5t \u0111\u1ed3ng b\u1ed9. Rxjs th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c \u1ee9ng d\u1ee5ng Angular. Observable: l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u1ea1i di\u1ec7n cho lu\u1ed3ng d\u1eef li\u1ec7u ho\u1eb7c s\u1ef1 ki\u1ec7n, c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c quan s\u00e1t b\u1edfi observer. Observable ph\u00e1 Observer: l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 ba ph\u01b0\u01a1ng th\u1ee9c next, error, complete Subscription: l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c t\u1ea1o ra khi subscribe v\u00e0o m\u1ed9t observable Operators: l\u00e0 c\u00e1c h\u00e0m d\u00f9ng \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb Observable Subjects: l\u00e0 m\u1ed9t Observable \u0111\u1eb7c bi\u1ec7t v\u1eeba l\u00e0 Observer C\u00e1c operators th\u01b0\u1eddng g\u1eb7p: map: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb t\u1eeb Observable productPrices$ .pipe(map((price) => price * exchangeRate)) .subscribe((vndPrice) => console.log(vndPrice)); filter: l\u1ecdc c\u00e1c gi\u00e1 tr\u1ecb theo \u0111i\u1ec1u ki\u1ec7n tap: th\u1ef1c hi\u1ec7n side effect m\u00e0 kh\u00f4ng thay \u0111\u1ed5i gi\u00e1 tr\u1ecb mergeMap: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb th\u00e0nh Observable v\u00e0 h\u1ee3p nh\u1ea5t k\u1ebft qu\u1ea3 switchMap: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb th\u00e0nh Observable v\u00e0 h\u1ee7y b\u1ecf Observable n\u1ebfu c\u00f3 gi\u00e1 tr\u1ecb m\u1edbi debounceTime: tr\u00ec ho\u00e3n gi\u00e1 tr\u1ecb ph\u00e1t ra sau m\u1ed9t kho\u1ea3ng th\u1eddi gian nh\u1ea5t \u0111\u1ecbnh. S\u1eed d\u1ee5ng khi search keywords, n\u1ebfu c\u00f3 m\u1ed9t c\u1ee5m t\u1eeb h\u1ea1n ch\u1ebf search t\u1eebng ch\u1eef c\u00e1i catchError: b\u1eaft l\u1ed7i v\u00e0 x\u1eed l\u00fd concat: k\u1ebft n\u1ed1i c\u00e1c Observable theo th\u1ee9 t\u1ef1 tap: th\u1ef1c hi\u1ec7n side effect m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb (console.log(), ...) distinctUntilChanged: ph\u00e1t ra gi\u00e1 tr\u1ecb khi n\u00f3 kh\u00e1c v\u1edbi gi\u00e1 tr\u1ecb tr\u01b0\u1edbc \u0111\u00f3 retry: t\u1ef1 \u0111\u1ed9ng th\u1eed l\u1ea1i v\u1edbi s\u1ed1 l\u1ea7n nh\u1ea5t \u0111\u1ecbnh Ngrx Ngrx l\u00e0 state management solution, state l\u00e0 data thay \u0111\u1ed5i s\u1eed d\u1ee5ng \u1edf nhi\u1ec1u components. Manage complex applications. State store: components c\u00f3 th\u1ec3 listen data in there Redux pattern Actions, Reducers, Store, Selectors, Effects State management Effects: kh\u00f4ng tr\u1ef1c ti\u1ebfp li\u00ean quan \u0111\u1ebfn update UI, HTTP Request, localStorage, logging l\u00e0 side effect v\u00ec kh\u00f4ng update UI Design patterns Singleton: qu\u1ea3n l\u00fd m\u1ed9t instance trong su\u1ed1t \u1ee9ng d\u1ee5ng Observer Pattern: Pub/Sub","title":"Angular"},{"location":"frontend/angular/#lich-su-angular","text":"2010: \u0111\u01b0\u1ee3c support b\u1edfi Google, SPA, kh\u00f4ng c\u00f2n ph\u1ee5 thu\u1ed9c v\u00e0o server, Iconic h\u1ee3p t\u00e1c 2014 - 2015: Angular ch\u1ea1m ng\u01b0\u1ee1ng, chu\u1ea9n m\u1edbi c\u1ee7a JS, Angular tr\u1edf n\u00ean tu\u1ed9t h\u1eadu, x\u00e2y d\u1ef1ng l\u1ea1i to\u00e0n b\u1ed9 2016: kh\u00f4ng bi\u1ebft maintain, l\u00e0m sao migrate t\u1eeb Angular.js, c\u00fa ph\u00e1p xa l\u1ea1 Angular 2.0 2018: Improve v\u00e0 ra nhi\u1ec1u b\u1ea3n c\u1eadp nh\u1eadt m\u1edbi","title":"L\u1ecbch s\u1eed Angular"},{"location":"frontend/angular/#module-component","text":"NgModule l\u00e0 m\u1ed9t decorator \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh m\u1ed9t module. Th\u00e0nh ph\u1ea7n c\u1ee7a NgModule g\u1ed3m declarations, imports, exports, providers, bootstrap NgComponent: qu\u1ea3n l\u00fd m\u1ed9t ph\u1ea7n giao di\u1ec7n, ch\u1ee9a logic v\u00e0 s\u1eed l\u00fd s\u1ef1 ki\u1ec7n. Component c\u00f3 th\u1ec3 l\u1ed3ng nhau. Standalone component gi\u00fap component t\u1ef1 qu\u1ea3n l\u00fd dependencies, lo\u1ea1i b\u1ecf s\u1ef1 ph\u1ee5 thu\u1ed9c v\u00e0o module.","title":"Module, component"},{"location":"frontend/angular/#directives","text":"Component Directive: l\u00e0 component trong angular Structural Directive: thay \u0111\u1ed5i c\u1ea5u tr\u00fac c\u1ee7a DOM b\u1eb1ng th\u00eam, x\u00f3a ho\u1eb7c thay \u0111\u1ed5i ph\u1ea7n t\u1eed trong DOM Attribute Directive: thay \u0111\u1ed5i giao di\u1ec7n ho\u1eb7c h\u00e0nh vi HTML, s\u1eed d\u1ee5ng v\u1edbi decorator Directive","title":"Directives"},{"location":"frontend/angular/#angular-lifecycle-hooks","text":"Constructor (khai b\u00e1o dependency injection) ngOnChanges (g\u1ecdi khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb Input c\u1ee7a component) ngOnInit (g\u1ecdi duy nh\u1ea5t 1 l\u1ea7n \u0111\u1ec3 kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb cho bi\u1ebfn, call api, kh\u1edfi t\u1ea1o form, ...) ngDoCheck ngAfterContentInit ngAfterContentChecked ngAfterViewInit ngAfterViewChecked ngOnDestroy","title":"Angular lifecycle hooks"},{"location":"frontend/angular/#binding","text":"[property-binding] (event-binding)","title":"Binding"},{"location":"frontend/angular/#routing","text":"\u0110i\u1ec1u h\u01b0\u1edbng component theo URL router-outlet routerLink","title":"Routing"},{"location":"frontend/angular/#dependency-injection","text":"DI l\u00e0 m\u1ed9t design pattern t\u00e1ch vi\u1ec7c kh\u1edfi t\u1ea1o ra vi\u1ec7c s\u1eed d\u1ee5ng, gi\u00fap d\u1ec5 b\u1ea3o tr\u00ec. C\u00e1c th\u00e0nh ph\u1ea7n ch\u00ednh trong DI: Provider, Injector, Token, Dependency M\u1ed9t class c\u00f3 th\u1ec3 \u0111\u0103ng k\u00fd s\u1eed d\u1ee5ng dependency th\u00f4ng constructor Khi component \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, Angular s\u1ebd inject m\u1ed9t instance c\u1ee7a service v\u00e0o constructor Service Inject dependencies","title":"Dependency Injection"},{"location":"frontend/angular/#rxjs-map-of-from","text":"Rxjs l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n \u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi reactive programming b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Observable. Gi\u00fap x\u1eed l\u00fd c\u00e1c lu\u1ed3ng s\u1ef1 ki\u1ec7n b\u1ea5t \u0111\u1ed3ng b\u1ed9. Rxjs th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c \u1ee9ng d\u1ee5ng Angular. Observable: l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u1ea1i di\u1ec7n cho lu\u1ed3ng d\u1eef li\u1ec7u ho\u1eb7c s\u1ef1 ki\u1ec7n, c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c quan s\u00e1t b\u1edfi observer. Observable ph\u00e1 Observer: l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 ba ph\u01b0\u01a1ng th\u1ee9c next, error, complete Subscription: l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c t\u1ea1o ra khi subscribe v\u00e0o m\u1ed9t observable Operators: l\u00e0 c\u00e1c h\u00e0m d\u00f9ng \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb Observable Subjects: l\u00e0 m\u1ed9t Observable \u0111\u1eb7c bi\u1ec7t v\u1eeba l\u00e0 Observer C\u00e1c operators th\u01b0\u1eddng g\u1eb7p: map: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb t\u1eeb Observable productPrices$ .pipe(map((price) => price * exchangeRate)) .subscribe((vndPrice) => console.log(vndPrice)); filter: l\u1ecdc c\u00e1c gi\u00e1 tr\u1ecb theo \u0111i\u1ec1u ki\u1ec7n tap: th\u1ef1c hi\u1ec7n side effect m\u00e0 kh\u00f4ng thay \u0111\u1ed5i gi\u00e1 tr\u1ecb mergeMap: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb th\u00e0nh Observable v\u00e0 h\u1ee3p nh\u1ea5t k\u1ebft qu\u1ea3 switchMap: chuy\u1ec3n \u0111\u1ed5i gi\u00e1 tr\u1ecb th\u00e0nh Observable v\u00e0 h\u1ee7y b\u1ecf Observable n\u1ebfu c\u00f3 gi\u00e1 tr\u1ecb m\u1edbi debounceTime: tr\u00ec ho\u00e3n gi\u00e1 tr\u1ecb ph\u00e1t ra sau m\u1ed9t kho\u1ea3ng th\u1eddi gian nh\u1ea5t \u0111\u1ecbnh. S\u1eed d\u1ee5ng khi search keywords, n\u1ebfu c\u00f3 m\u1ed9t c\u1ee5m t\u1eeb h\u1ea1n ch\u1ebf search t\u1eebng ch\u1eef c\u00e1i catchError: b\u1eaft l\u1ed7i v\u00e0 x\u1eed l\u00fd concat: k\u1ebft n\u1ed1i c\u00e1c Observable theo th\u1ee9 t\u1ef1 tap: th\u1ef1c hi\u1ec7n side effect m\u00e0 kh\u00f4ng l\u00e0m thay \u0111\u1ed5i gi\u00e1 tr\u1ecb (console.log(), ...) distinctUntilChanged: ph\u00e1t ra gi\u00e1 tr\u1ecb khi n\u00f3 kh\u00e1c v\u1edbi gi\u00e1 tr\u1ecb tr\u01b0\u1edbc \u0111\u00f3 retry: t\u1ef1 \u0111\u1ed9ng th\u1eed l\u1ea1i v\u1edbi s\u1ed1 l\u1ea7n nh\u1ea5t \u0111\u1ecbnh","title":"Rxjs (map, of, from)"},{"location":"frontend/angular/#ngrx","text":"Ngrx l\u00e0 state management solution, state l\u00e0 data thay \u0111\u1ed5i s\u1eed d\u1ee5ng \u1edf nhi\u1ec1u components. Manage complex applications. State store: components c\u00f3 th\u1ec3 listen data in there Redux pattern Actions, Reducers, Store, Selectors, Effects State management Effects: kh\u00f4ng tr\u1ef1c ti\u1ebfp li\u00ean quan \u0111\u1ebfn update UI, HTTP Request, localStorage, logging l\u00e0 side effect v\u00ec kh\u00f4ng update UI","title":"Ngrx"},{"location":"frontend/angular/#design-patterns","text":"Singleton: qu\u1ea3n l\u00fd m\u1ed9t instance trong su\u1ed1t \u1ee9ng d\u1ee5ng Observer Pattern: Pub/Sub","title":"Design patterns"},{"location":"frontend/css/","text":"CSS CSS (Casading Style Sheets) d\u00f9ng \u0111\u1ec3 m\u00f4 t\u1ea3 c\u00e1ch m\u00e0 HTML hi\u1ec3n th\u1ecb bao g\u1ed3m thi\u1ebft k\u1ebf, layout v\u00e0 v\u1edbi c\u00e1c thi\u1ebft b\u1ecb v\u00e0 m\u00e0n h\u00ecnh c\u00f3 k\u00edch th\u01b0\u1edbc kh\u00e1c nhau. How to add CSS C\u00f3 3 c\u00e1ch \u0111\u1ec3 th\u00eam CSS Inline: th\u00eam th\u1eb3ng v\u00e0o th\u1ebb b\u1eb1ng thu\u1ed9c t\u00ednh style <h1 style=\"color:blue;text-align:center;\">This is a heading</h1> Internal: \u0111\u01b0\u1ee3c vi\u1ebft trong th\u1ebb style n\u1eb1m trong head section <style> body { background-color: red; } </style> External: vi\u1ebft \u1edf m\u1ed9t file kh\u00e1c l\u00e0 d\u00f9ng th\u1ebb link n\u1eb1m trong head section <link ref=\"stylesheet\" href=\"mystyle .css\"> Ph\u00e2n bi\u1ec7t inline, inline-block v\u00e0 block Inline: nh\u1eefng th\u1ebb inline s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t h\u00e0ng v\u00e0 kh\u00f4ng th\u1ec3 ch\u1ec9nh width v\u00e0 height Inline-block: nh\u1eefng th\u1ebb inline-block s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t h\u00e0ng nh\u01b0ng c\u00f3 th\u1ec3 ch\u1ec9nh width v\u00e0 height Block: nh\u1eefng th\u1ebb block s\u1ebd n\u1eb1m tr\u00ean 1 h\u00e0ng Grid v\u00e0 Flexbox S\u1ef1 kh\u00e1c nhau c\u01a1 b\u1ea3n l\u00e0 flexbox \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho layout m\u1ed9t chi\u1ec1u nh\u01b0ng grid \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho layout 2 chi\u1ec1u. Ngo\u00e0i ra flexbox l\u1ea5y content l\u00e0m n\u1ec1n t\u1ea3ng nh\u01b0ng c\u00f2n \u0111\u1ed1i v\u1edbi grid l\u00e0 layout. \u0110i\u1ec3m m\u1ea5u ch\u1ed1t l\u00e0 \u0111\u1ed1i v\u1edbi grid, ta ph\u1ea3i \u0111\u1ecbnh ngh\u0129a chi\u1ec1u r\u1ed9ng c\u1ee7a c\u1ed9t sau \u0111\u00f3 m\u1edbi \u0111\u1eb7t content v\u00e0o. Position Bao g\u1ed3m 5 thu\u1ed9c t\u00ednh: static, relative, fixed, absolute v\u00e0 sticky M\u1ed9t ph\u1ea7n t\u1eed c\u00f3 position: absolute s\u1ebd positioned ph\u1ea7n t\u1eed relative cha g\u1ea7n nh\u1ea5t. Position: fixed th\u00ec ph\u1ea7n t\u1eed relative l\u00e0 viewport, ngh\u0129a l\u00e0 n\u00f3 v\u1eabn s\u1ebd n\u1eb1m \u1edf c\u00f9ng m\u1ed9t v\u1ecb tr\u00ed n\u1ebfu trang web \u0111\u01b0\u1ee3c scroll. Position: sticky v\u1eabn \u0111\u01b0\u1ee3c gi\u1eef khi scroll. Kh\u00e1c nhau gi\u1eefa fixed v\u00e0 sticky? CSS Units G\u1ed3m 2 lo\u1ea1i l\u00e0 Absolute Lengths (cm, mm, in, pt, pc) nh\u01b0ng hay th\u01b0\u1eddng s\u1eed d\u1ee5ng nh\u1ea5t l\u00e0 px. Relative Lengths bao g\u1ed3m em (ph\u1ee5 thu\u1ed9c v\u00e0o font-size th\u1ebb cha g\u1ea7n nh\u1ea5t), rem (ph\u1ee5 thu\u1ed9c v\u00e0o th\u1ebb html 1rem = 16px) Box-sizing: border-box Khi ta set border, padding cho ph\u1ea7n t\u1eed th\u00ec k\u00edch th\u01b0\u1edbc ban \u0111\u1ea7u t\u0103ng l\u00ean. D\u00f9ng Box-sizing: border-box s\u1ebd t\u00ednh to\u00e1n l\u1ea1i ph\u1ea7n content sao cho content v\u1edbi c\u00e1c ph\u1ea7n t\u0103ng th\u00eam b\u1eb1ng k\u00edch th\u01b0\u1edbc ban \u0111\u1ea7u \u0111\u1eb7t ra. Box Model Responsive Responsive mang t\u1edbi tr\u1ea3i nghi\u1ec7m t\u1ed1t nh\u1ea5t cho m\u1ecdi ng\u01b0\u1eddi d\u00f9ng t\u1eeb desktops, tablets v\u00e0 phones. C\u00e1c break-point c\u01a1 b\u1ea3n: Mobile - 320px Tablet - 768px Desktop - 1024px @media only screen and (max-width: 600px) { div { background-color: red; } } CSS Selector https://www.w3schools.com/cssref/css_selectors.php CSS Pseudo-classes X\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i \u0111\u1eb7c bi\u1ec7t c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed bao g\u1ed3m hover, focus, visited, ... SCSS SCSS l\u00e0 stylesheet language compiled th\u00e0nh CSS. SCSS cho ph\u00e9p s\u1eed d\u1ee5ng variables, nested ruled, mixixs, functions v\u00e0 h\u01a1n th\u1ebf n\u1eefa. SCSS gi\u00fap gi\u1eef CSS well-organized v\u00e0 t\u00e1i s\u1eed d\u1ee5ng. Varibles $font-stack: Helvetica, sans-serif; $primary-color: #333; body { font: 100% $font-stack; color: $primary-color; } Nesting HTML c\u00f3 h\u1ec7 th\u1ed1ng c\u1ea5p b\u1eadc khi c\u00e1c ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 l\u1ed3ng nhau v\u00e0 CSS kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0ng SCSS l\u00e0m \u0111\u01b0\u1ee3c. nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } } Mixins @mixin theme($theme: DarkGray) { background: $theme; box-shadow: 0 0 1px rgba($theme, .25); color: #fff; } .info { @include theme; } .alert { @include theme($theme: DarkRed); } .success { @include theme($theme: DarkGreen); }","title":"CSS"},{"location":"frontend/css/#css","text":"CSS (Casading Style Sheets) d\u00f9ng \u0111\u1ec3 m\u00f4 t\u1ea3 c\u00e1ch m\u00e0 HTML hi\u1ec3n th\u1ecb bao g\u1ed3m thi\u1ebft k\u1ebf, layout v\u00e0 v\u1edbi c\u00e1c thi\u1ebft b\u1ecb v\u00e0 m\u00e0n h\u00ecnh c\u00f3 k\u00edch th\u01b0\u1edbc kh\u00e1c nhau.","title":"CSS"},{"location":"frontend/css/#how-to-add-css","text":"C\u00f3 3 c\u00e1ch \u0111\u1ec3 th\u00eam CSS Inline: th\u00eam th\u1eb3ng v\u00e0o th\u1ebb b\u1eb1ng thu\u1ed9c t\u00ednh style <h1 style=\"color:blue;text-align:center;\">This is a heading</h1> Internal: \u0111\u01b0\u1ee3c vi\u1ebft trong th\u1ebb style n\u1eb1m trong head section <style> body { background-color: red; } </style> External: vi\u1ebft \u1edf m\u1ed9t file kh\u00e1c l\u00e0 d\u00f9ng th\u1ebb link n\u1eb1m trong head section <link ref=\"stylesheet\" href=\"mystyle .css\">","title":"How to add CSS"},{"location":"frontend/css/#phan-biet-inline-inline-block-va-block","text":"Inline: nh\u1eefng th\u1ebb inline s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t h\u00e0ng v\u00e0 kh\u00f4ng th\u1ec3 ch\u1ec9nh width v\u00e0 height Inline-block: nh\u1eefng th\u1ebb inline-block s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t h\u00e0ng nh\u01b0ng c\u00f3 th\u1ec3 ch\u1ec9nh width v\u00e0 height Block: nh\u1eefng th\u1ebb block s\u1ebd n\u1eb1m tr\u00ean 1 h\u00e0ng","title":"Ph\u00e2n bi\u1ec7t inline, inline-block v\u00e0 block"},{"location":"frontend/css/#grid-va-flexbox","text":"S\u1ef1 kh\u00e1c nhau c\u01a1 b\u1ea3n l\u00e0 flexbox \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho layout m\u1ed9t chi\u1ec1u nh\u01b0ng grid \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho layout 2 chi\u1ec1u. Ngo\u00e0i ra flexbox l\u1ea5y content l\u00e0m n\u1ec1n t\u1ea3ng nh\u01b0ng c\u00f2n \u0111\u1ed1i v\u1edbi grid l\u00e0 layout. \u0110i\u1ec3m m\u1ea5u ch\u1ed1t l\u00e0 \u0111\u1ed1i v\u1edbi grid, ta ph\u1ea3i \u0111\u1ecbnh ngh\u0129a chi\u1ec1u r\u1ed9ng c\u1ee7a c\u1ed9t sau \u0111\u00f3 m\u1edbi \u0111\u1eb7t content v\u00e0o.","title":"Grid v\u00e0 Flexbox"},{"location":"frontend/css/#position","text":"Bao g\u1ed3m 5 thu\u1ed9c t\u00ednh: static, relative, fixed, absolute v\u00e0 sticky M\u1ed9t ph\u1ea7n t\u1eed c\u00f3 position: absolute s\u1ebd positioned ph\u1ea7n t\u1eed relative cha g\u1ea7n nh\u1ea5t. Position: fixed th\u00ec ph\u1ea7n t\u1eed relative l\u00e0 viewport, ngh\u0129a l\u00e0 n\u00f3 v\u1eabn s\u1ebd n\u1eb1m \u1edf c\u00f9ng m\u1ed9t v\u1ecb tr\u00ed n\u1ebfu trang web \u0111\u01b0\u1ee3c scroll. Position: sticky v\u1eabn \u0111\u01b0\u1ee3c gi\u1eef khi scroll. Kh\u00e1c nhau gi\u1eefa fixed v\u00e0 sticky?","title":"Position"},{"location":"frontend/css/#css-units","text":"G\u1ed3m 2 lo\u1ea1i l\u00e0 Absolute Lengths (cm, mm, in, pt, pc) nh\u01b0ng hay th\u01b0\u1eddng s\u1eed d\u1ee5ng nh\u1ea5t l\u00e0 px. Relative Lengths bao g\u1ed3m em (ph\u1ee5 thu\u1ed9c v\u00e0o font-size th\u1ebb cha g\u1ea7n nh\u1ea5t), rem (ph\u1ee5 thu\u1ed9c v\u00e0o th\u1ebb html 1rem = 16px)","title":"CSS Units"},{"location":"frontend/css/#box-sizing-border-box","text":"Khi ta set border, padding cho ph\u1ea7n t\u1eed th\u00ec k\u00edch th\u01b0\u1edbc ban \u0111\u1ea7u t\u0103ng l\u00ean. D\u00f9ng Box-sizing: border-box s\u1ebd t\u00ednh to\u00e1n l\u1ea1i ph\u1ea7n content sao cho content v\u1edbi c\u00e1c ph\u1ea7n t\u0103ng th\u00eam b\u1eb1ng k\u00edch th\u01b0\u1edbc ban \u0111\u1ea7u \u0111\u1eb7t ra.","title":"Box-sizing: border-box"},{"location":"frontend/css/#box-model","text":"","title":"Box Model"},{"location":"frontend/css/#responsive","text":"Responsive mang t\u1edbi tr\u1ea3i nghi\u1ec7m t\u1ed1t nh\u1ea5t cho m\u1ecdi ng\u01b0\u1eddi d\u00f9ng t\u1eeb desktops, tablets v\u00e0 phones. C\u00e1c break-point c\u01a1 b\u1ea3n: Mobile - 320px Tablet - 768px Desktop - 1024px @media only screen and (max-width: 600px) { div { background-color: red; } }","title":"Responsive"},{"location":"frontend/css/#css-selector","text":"https://www.w3schools.com/cssref/css_selectors.php","title":"CSS Selector"},{"location":"frontend/css/#css-pseudo-classes","text":"X\u00e1c \u0111\u1ecbnh tr\u1ea1ng th\u00e1i \u0111\u1eb7c bi\u1ec7t c\u1ee7a m\u1ed9t ph\u1ea7n t\u1eed bao g\u1ed3m hover, focus, visited, ...","title":"CSS Pseudo-classes"},{"location":"frontend/css/#scss","text":"SCSS l\u00e0 stylesheet language compiled th\u00e0nh CSS. SCSS cho ph\u00e9p s\u1eed d\u1ee5ng variables, nested ruled, mixixs, functions v\u00e0 h\u01a1n th\u1ebf n\u1eefa. SCSS gi\u00fap gi\u1eef CSS well-organized v\u00e0 t\u00e1i s\u1eed d\u1ee5ng.","title":"SCSS"},{"location":"frontend/css/#varibles","text":"$font-stack: Helvetica, sans-serif; $primary-color: #333; body { font: 100% $font-stack; color: $primary-color; }","title":"Varibles"},{"location":"frontend/css/#nesting","text":"HTML c\u00f3 h\u1ec7 th\u1ed1ng c\u1ea5p b\u1eadc khi c\u00e1c ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 l\u1ed3ng nhau v\u00e0 CSS kh\u00f4ng l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0ng SCSS l\u00e0m \u0111\u01b0\u1ee3c. nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } }","title":"Nesting"},{"location":"frontend/css/#mixins","text":"@mixin theme($theme: DarkGray) { background: $theme; box-shadow: 0 0 1px rgba($theme, .25); color: #fff; } .info { @include theme; } .alert { @include theme($theme: DarkRed); } .success { @include theme($theme: DarkGreen); }","title":"Mixins"},{"location":"frontend/html/","text":"HTML HTML (Hyper Text Markup Language) l\u00e0 ng\u00f4n ng\u1eef markup d\u00f9ng \u0111\u1ec3 t\u1ea1o n\u00ean nh\u1eefng trang Web. HTML l\u00e0 th\u00e0nh ph\u1ea7n \u0111\u1ecbnh ngh\u0129a c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t trang Web. <!DOCTYPE html> Khai b\u00e1o n\u00e0y kh\u00f4ng ph\u1ea3i l\u00e0 HTML tag. Cho ph\u00e9p tr\u00ecnh duy\u1ec7t bi\u1ebft Web \u0111ang s\u1eed d\u1ee5ng markup language n\u00e0o. Th\u1ebb meta \u0111\u01b0\u1ee3c d\u00f9ng b\u1edfi browser (c\u00e1ch hi\u1ec3n th\u1ecb n\u1ed9i dung), search engines (keywords). M\u1ed9t s\u1ed1 th\u1ebb meta: title, description, content-type, view-port,... Semantic Elements It describes its meaning to both the browser and the developer. Non-semantic elements: div and span - Tells nothing about this content. Semantic elements: form, table, and article - Clearly defines its content. HTML DOM (Document Object Model) Khi m\u1ed9t trang web \u0111\u01b0\u1ee3c load, browser s\u1ebd t\u1ea1o ra DOM. HTML DOM model \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u01b0 m\u1ed9t c\u00e2y Objects. V\u00e0 Javascript c\u00f3 th\u1ec3 access v\u00e0 thay \u0111\u1ed5i c\u00e1c elements trong HTML. M\u1ed9t s\u1ed1 c\u00e1ch \u1ea9n element S\u1eed d\u1ee5ng display: none - X\u00f3a kh\u1ecfi DOM S\u1eed d\u1ee5ng opacity: 0 - Kh\u00f4ng b\u1ecb x\u00f3a kh\u1ecfi DOM, c\u00f3 th\u1ec3 d\u00f9ng click ho\u1eb7c hover S\u1eed d\u1ee5ng visible: hidden - Kh\u00f4ng b\u1ecb x\u00f3a kh\u1ecfi DOM, kh\u00f4ng th\u1ec3 d\u00f9ng click ho\u1eb7c hover SEO l\u00e0 g\u00ec? SEO (Search Engine Optimization) ngh\u0129a l\u00e0 t\u1ed1i \u01b0u h\u00f3a v\u1ecb tr\u00ed t\u00ecm ki\u1ebfm tr\u00ean c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0: Google, ... M\u1ed9t s\u1ed1 c\u00e1ch s\u1eed d\u1ee5ng SEO: S\u1eed d\u1ee5ng \u0111\u1ea7y \u0111\u1ee7 th\u1ebb meta S\u1eed d\u1ee5ng \u0111\u1ea7y \u0111\u1ee7 sematic S\u1eed d\u1ee5ng nhi\u1ec1u h1 cho ti\u00eau \u0111\u1ec1 Image ph\u1ea3i c\u00f3 thu\u1ed9c t\u00ednh alt","title":"HTML"},{"location":"frontend/html/#html","text":"HTML (Hyper Text Markup Language) l\u00e0 ng\u00f4n ng\u1eef markup d\u00f9ng \u0111\u1ec3 t\u1ea1o n\u00ean nh\u1eefng trang Web. HTML l\u00e0 th\u00e0nh ph\u1ea7n \u0111\u1ecbnh ngh\u0129a c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t trang Web. <!DOCTYPE html> Khai b\u00e1o n\u00e0y kh\u00f4ng ph\u1ea3i l\u00e0 HTML tag. Cho ph\u00e9p tr\u00ecnh duy\u1ec7t bi\u1ebft Web \u0111ang s\u1eed d\u1ee5ng markup language n\u00e0o. Th\u1ebb meta \u0111\u01b0\u1ee3c d\u00f9ng b\u1edfi browser (c\u00e1ch hi\u1ec3n th\u1ecb n\u1ed9i dung), search engines (keywords). M\u1ed9t s\u1ed1 th\u1ebb meta: title, description, content-type, view-port,...","title":"HTML"},{"location":"frontend/html/#semantic-elements","text":"It describes its meaning to both the browser and the developer. Non-semantic elements: div and span - Tells nothing about this content. Semantic elements: form, table, and article - Clearly defines its content.","title":"Semantic Elements"},{"location":"frontend/html/#html-dom-document-object-model","text":"Khi m\u1ed9t trang web \u0111\u01b0\u1ee3c load, browser s\u1ebd t\u1ea1o ra DOM. HTML DOM model \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u01b0 m\u1ed9t c\u00e2y Objects. V\u00e0 Javascript c\u00f3 th\u1ec3 access v\u00e0 thay \u0111\u1ed5i c\u00e1c elements trong HTML.","title":"HTML DOM (Document Object Model)"},{"location":"frontend/html/#mot-so-cach-an-element","text":"S\u1eed d\u1ee5ng display: none - X\u00f3a kh\u1ecfi DOM S\u1eed d\u1ee5ng opacity: 0 - Kh\u00f4ng b\u1ecb x\u00f3a kh\u1ecfi DOM, c\u00f3 th\u1ec3 d\u00f9ng click ho\u1eb7c hover S\u1eed d\u1ee5ng visible: hidden - Kh\u00f4ng b\u1ecb x\u00f3a kh\u1ecfi DOM, kh\u00f4ng th\u1ec3 d\u00f9ng click ho\u1eb7c hover","title":"M\u1ed9t s\u1ed1 c\u00e1ch \u1ea9n element"},{"location":"frontend/html/#seo-la-gi","text":"SEO (Search Engine Optimization) ngh\u0129a l\u00e0 t\u1ed1i \u01b0u h\u00f3a v\u1ecb tr\u00ed t\u00ecm ki\u1ebfm tr\u00ean c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0: Google, ... M\u1ed9t s\u1ed1 c\u00e1ch s\u1eed d\u1ee5ng SEO: S\u1eed d\u1ee5ng \u0111\u1ea7y \u0111\u1ee7 th\u1ebb meta S\u1eed d\u1ee5ng \u0111\u1ea7y \u0111\u1ee7 sematic S\u1eed d\u1ee5ng nhi\u1ec1u h1 cho ti\u00eau \u0111\u1ec1 Image ph\u1ea3i c\u00f3 thu\u1ed9c t\u00ednh alt","title":"SEO l\u00e0 g\u00ec?"},{"location":"frontend/interview/","text":"Pass by Value and Pass by Reference in Javascript Tham tr\u1ecb: String, Number, Boolean Tham chi\u1ebfu: Object, Array What's the difference between a variable that is: null , undefined or undeclared? Khai b\u00e1o m\u00e0 kh\u00f4ng \u0111i\u1ec1n gi\u00e1 tr\u1ecb undefined Khai b\u00e1o m\u00e0 \u0111\u01b0\u1ee3c g\u00e1n gi\u00e1 tr\u1ecb, gi\u00e1 tr\u1ecb \u0111\u00f3 ch\u00ednh l\u00e0 null What's the difference between inline and inline-block ? Block: chi\u1ebfm to\u00e0n b\u1ed9 width n\u1ebfu kh\u00f4ng \u0111\u01b0\u1ee3c set Inline: c\u00e1c items s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t d\u00f2ng, kh\u00f4ng th\u1ec3 set height v\u00e0 width Inline-block: c\u00e1c items n\u1eb1m tr\u00ean m\u1ed9t d\u00f2ng nh\u01b0ng c\u00f3 th\u1ec3 set height v\u00e0 width Describe the difference between a cookie, sessionStorage and localStorage . LocalStorage localStorage gi\u00fap l\u01b0u tr\u1eef d\u1eef li\u1ec7u v\u0129nh vi\u1ec5n tr\u00ean tr\u00ecnh duy\u1ec7t (tr\u1eeb khi x\u00f3a cache) C\u00f3 2 tr\u01b0\u1eddng l\u00e0: key, value L\u01b0u tr\u1eef d\u1eef li\u1ec7u tr\u01b0\u1edbc \u0111\u00f3 ng\u01b0\u1eddi d\u00f9ng, settings ng\u01b0\u1eddi d\u00f9ng (theme) window.LocalStorage.setItem('name', 'value'); window.LocalStorage.getItem('name'); window.LocalStorage.clear(); window.LocalStorage.removeItem('name'); V\u1ea5n \u0111\u1ec1 kh\u00f4ng b\u1ea3o m\u1eadt, c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng l\u01b0u, l\u1ea5y v\u00e0 s\u1eeda SessionStorage sessionStorage c\u0169ng t\u01b0\u01a1ng t\u1ef1 localStorage nh\u01b0ng d\u1eef li\u1ec7u s\u1ebd m\u1ea5t khi \u0111\u00f3ng tr\u00ecnh duy\u1ec7t C\u00f3 th\u1ec3 b\u1ecb cross-site scripting v\u00ec th\u1ebf kh\u00f4ng n\u00ean l\u01b0u tr\u1eef c\u00e1c th\u00f4ng tin nh\u1ea1y c\u1ea3m nh\u01b0 password Cookie Cookie l\u00e0 nh\u1eefng t\u1eadp tin m\u1ed9t trang web g\u1eedi t\u1edbi ng\u01b0\u1eddi d\u00f9ng. Cookie \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn \u0111\u1ec3 l\u01b0u l\u1ea1i phi\u00ean \u0111\u0103ng nh\u1eadp Request g\u1eedi \u0111i server \u0111\u01b0\u1ee3c g\u1eedi k\u00e8m cookie HtttpOnly, code JS \u1ee9ng d\u1ee5ng b\u00ean th\u1ee9 3 kh\u00f4ng th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u cookie Cookie c\u00f3 th\u1eddi gian expire BEM (Block, Element, Modifier) <form class=\"form form--theme-xmas form--simple\"> <input class=\"form__input\" type=\"text\" /> <input class=\"form__submit form__submit--disabled\" type=\"submit\" /> </form> Truthy, Falsy l\u00e0 g\u00ec? Truthy l\u00e0 nh\u1eefng gi\u00e1 tr\u1ecb m\u00e0 khi encounter in Boolean context th\u00ec n\u00f3 b\u1eb1ng true. Falsy l\u00e0 nh\u1eefng gi\u00e1 tr\u1ecb m\u00e0 khi encounter in Boolean context th\u00ec n\u00f3 b\u1eb1ng false. Th\u1ebb Span v\u00e0 Div kh\u00e1c nhau nh\u01b0 th\u1ebf n\u00e0o? K\u1ec3 t\u00ean c\u00e1c th\u1ebb block v\u00e0 inline? span l\u00e0 th\u1ebb inline, th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 ch\u1ee9a d\u1eef li\u1ec7u div l\u00e0 th\u1ebb block, th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 ph\u00e2n n\u1ed9i dung th\u00e0nh c\u00e1c \u0111o\u1ea1n Thu\u1ed9c t\u00ednh data- l\u00e0 g\u00ec? L\u01b0u tr\u1eef th\u00eam th\u00f4ng tin v\u00e0o element Nguy\u00ean l\u00fd ho\u1ea1t \u0111\u1ed9ng c\u1ee7a stack v\u00e0 queue. C\u00e1c \u1ee9ng d\u1ee5ng? Event loop X\u1eed l\u00fd ngo\u1ea1i l\u1ec7? Catch th\u00ec nh\u1eadn \u0111\u01b0\u1ee3c trong exception, l\u00e0m g\u00ec v\u1edbi exception \u0111\u00f3. L\u00e0m 2 th\u1ee9: log l\u1ea1i c\u00e1i l\u1ed7i \u0111\u00f3, \u0111\u1ea9y l\u00ean c\u00e1i kho l\u01b0u tr\u1eef, b\u1eafn v\u1ec1 c\u00e1i l\u1ed7i slack. Return c\u00e1i l\u1ed7i cho ng\u01b0\u1eddi d\u00f9ng, vi\u1ebft l\u1ed7i cho d\u1ec5 hi\u1ec3u v\u00ec n\u1ebfu b\u1eafn l\u1ed7i ra trong code th\u00ec c\u00e1c ng\u01b0\u1eddi d\u00f9ng bi\u1ebft code s\u1ebd bi\u1ebft h\u1ec7 th\u1ed1ng ho\u1ea1t \u0111\u1ed9ng ra sao. Stack trace \u00e1p d\u1ee5ng nguy\u00ean l\u00fd c\u1ee7a stack Trong c\u00e1c thu\u1eadt to\u00e1n th\u1eb1ng n\u00e0o nhanh nh\u1ea5t? Kh\u00f4ng c\u00f3, tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, trung b\u00ecnh, t\u1ed1t nh\u1ea5t Quick sort \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(nlog(n)) Bubble sort tr\u01b0\u1eddng h\u1ee3p best th\u00ec O(n) \u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 g\u00ec? \u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \u0111\u1ecbnh l\u01b0\u1ee3ng t\u01b0\u01a1ng \u0111\u1ed1i s\u1ed1 ph\u00e9p to\u00e1n m\u00e0 m\u00e1y t\u00ednh ph\u1ea3i th\u1ef1c hi\u1ec7n. Relative v\u00e0 absolute? Cho hai th\u1eb1ng absolute n\u00f3 c\u00f3 m\u1ed1i quan h\u1ec7 cha con Relative d\u1ef1a v\u00e0o v\u1ecb tr\u00ed ban \u0111\u1ea7u c\u1ee7a n\u00f3 DOM v\u00e0 DOM \u1ea3o? DOM: \u00d4ng Browser nh\u1eadn \u0111\u01b0\u1ee3c file HTML. Browser d\u1ef1a tr\u00ean c\u00e1i quy chu\u1ea9n \u00f4ng \u0111\u00f3 d\u1ecbch HTML th\u00e0nh DOM, d\u1ef1a v\u00e0o quy chu\u1ea9n W3C t\u1ea1o ra m\u00f4 h\u00ecnh d\u1ea1ng c\u00e2y C\u00e1c d\u1ef1 \u00e1n l\u1edbn, DOM Tree r\u1ea5t l\u1edbn, m\u1ed7i khi DOM \u0111\u1ed5i ph\u1ea3i t\u00ednh to\u00e1n l\u1ea1i CSS -> T\u1ed1c \u0111\u1ed9 rendering ch\u1eadm Khi React render, React t\u1ea1o DOM \u1ea3o. Khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i c\u1ee7a state, t\u1ea1o ra DOM \u0111\u1ed5i. Ch\u1ea1y thu\u1eadt to\u00e1n so s\u00e1nh gi\u1eefa DOM c\u0169 v\u00e0 m\u1edbi \u0111\u1ec3 t\u00ecm ra th\u00e0nh ph\u1ea7n \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt. Sau khi ti\u1ebfn h\u00e0nh so s\u00e1nh, ReactDOM render l\u1ea1i c\u00e1c th\u00e0nh ph\u1ea7n c\u1ea7n c\u1eadp nh\u1eadt l\u00ean DOM th\u1eadt. Client side v\u00e0 server side? CSR (Client side rendering) - SPA (Single Page Application) SSR (Server side rendering) - MPA (Multiple Page Application)","title":"Interview"},{"location":"frontend/interview/#pass-by-value-and-pass-by-reference-in-javascript","text":"Tham tr\u1ecb: String, Number, Boolean Tham chi\u1ebfu: Object, Array","title":"Pass by Value and Pass by Reference in Javascript"},{"location":"frontend/interview/#whats-the-difference-between-a-variable-that-is-null-undefined-or-undeclared","text":"Khai b\u00e1o m\u00e0 kh\u00f4ng \u0111i\u1ec1n gi\u00e1 tr\u1ecb undefined Khai b\u00e1o m\u00e0 \u0111\u01b0\u1ee3c g\u00e1n gi\u00e1 tr\u1ecb, gi\u00e1 tr\u1ecb \u0111\u00f3 ch\u00ednh l\u00e0 null","title":"What's the difference between a variable that is: null, undefined or undeclared?"},{"location":"frontend/interview/#whats-the-difference-between-inline-and-inline-block","text":"Block: chi\u1ebfm to\u00e0n b\u1ed9 width n\u1ebfu kh\u00f4ng \u0111\u01b0\u1ee3c set Inline: c\u00e1c items s\u1ebd n\u1eb1m c\u00f9ng m\u1ed9t d\u00f2ng, kh\u00f4ng th\u1ec3 set height v\u00e0 width Inline-block: c\u00e1c items n\u1eb1m tr\u00ean m\u1ed9t d\u00f2ng nh\u01b0ng c\u00f3 th\u1ec3 set height v\u00e0 width","title":"What's the difference between inline and inline-block?"},{"location":"frontend/interview/#describe-the-difference-between-a-cookie-sessionstorage-and-localstorage","text":"","title":"Describe the difference between a cookie, sessionStorage and localStorage."},{"location":"frontend/interview/#localstorage","text":"localStorage gi\u00fap l\u01b0u tr\u1eef d\u1eef li\u1ec7u v\u0129nh vi\u1ec5n tr\u00ean tr\u00ecnh duy\u1ec7t (tr\u1eeb khi x\u00f3a cache) C\u00f3 2 tr\u01b0\u1eddng l\u00e0: key, value L\u01b0u tr\u1eef d\u1eef li\u1ec7u tr\u01b0\u1edbc \u0111\u00f3 ng\u01b0\u1eddi d\u00f9ng, settings ng\u01b0\u1eddi d\u00f9ng (theme) window.LocalStorage.setItem('name', 'value'); window.LocalStorage.getItem('name'); window.LocalStorage.clear(); window.LocalStorage.removeItem('name'); V\u1ea5n \u0111\u1ec1 kh\u00f4ng b\u1ea3o m\u1eadt, c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng l\u01b0u, l\u1ea5y v\u00e0 s\u1eeda","title":"LocalStorage"},{"location":"frontend/interview/#sessionstorage","text":"sessionStorage c\u0169ng t\u01b0\u01a1ng t\u1ef1 localStorage nh\u01b0ng d\u1eef li\u1ec7u s\u1ebd m\u1ea5t khi \u0111\u00f3ng tr\u00ecnh duy\u1ec7t C\u00f3 th\u1ec3 b\u1ecb cross-site scripting v\u00ec th\u1ebf kh\u00f4ng n\u00ean l\u01b0u tr\u1eef c\u00e1c th\u00f4ng tin nh\u1ea1y c\u1ea3m nh\u01b0 password","title":"SessionStorage"},{"location":"frontend/interview/#cookie","text":"Cookie l\u00e0 nh\u1eefng t\u1eadp tin m\u1ed9t trang web g\u1eedi t\u1edbi ng\u01b0\u1eddi d\u00f9ng. Cookie \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn \u0111\u1ec3 l\u01b0u l\u1ea1i phi\u00ean \u0111\u0103ng nh\u1eadp Request g\u1eedi \u0111i server \u0111\u01b0\u1ee3c g\u1eedi k\u00e8m cookie HtttpOnly, code JS \u1ee9ng d\u1ee5ng b\u00ean th\u1ee9 3 kh\u00f4ng th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u cookie Cookie c\u00f3 th\u1eddi gian expire","title":"Cookie"},{"location":"frontend/interview/#bem-block-element-modifier","text":"<form class=\"form form--theme-xmas form--simple\"> <input class=\"form__input\" type=\"text\" /> <input class=\"form__submit form__submit--disabled\" type=\"submit\" /> </form>","title":"BEM (Block, Element, Modifier)"},{"location":"frontend/interview/#truthy-falsy-la-gi","text":"Truthy l\u00e0 nh\u1eefng gi\u00e1 tr\u1ecb m\u00e0 khi encounter in Boolean context th\u00ec n\u00f3 b\u1eb1ng true. Falsy l\u00e0 nh\u1eefng gi\u00e1 tr\u1ecb m\u00e0 khi encounter in Boolean context th\u00ec n\u00f3 b\u1eb1ng false.","title":"Truthy, Falsy l\u00e0 g\u00ec?"},{"location":"frontend/interview/#the-span-va-div-khac-nhau-nhu-the-nao-ke-ten-cac-the-block-va-inline","text":"span l\u00e0 th\u1ebb inline, th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 ch\u1ee9a d\u1eef li\u1ec7u div l\u00e0 th\u1ebb block, th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 ph\u00e2n n\u1ed9i dung th\u00e0nh c\u00e1c \u0111o\u1ea1n","title":"Th\u1ebb Span v\u00e0 Div kh\u00e1c nhau nh\u01b0 th\u1ebf n\u00e0o? K\u1ec3 t\u00ean c\u00e1c th\u1ebb block v\u00e0 inline?"},{"location":"frontend/interview/#thuoc-tinh-data-la-gi","text":"L\u01b0u tr\u1eef th\u00eam th\u00f4ng tin v\u00e0o element","title":"Thu\u1ed9c t\u00ednh data- l\u00e0 g\u00ec?"},{"location":"frontend/interview/#nguyen-ly-hoat-ong-cua-stack-va-queue-cac-ung-dung","text":"Event loop","title":"Nguy\u00ean l\u00fd ho\u1ea1t \u0111\u1ed9ng c\u1ee7a stack v\u00e0 queue. C\u00e1c \u1ee9ng d\u1ee5ng?"},{"location":"frontend/interview/#xu-ly-ngoai-le","text":"Catch th\u00ec nh\u1eadn \u0111\u01b0\u1ee3c trong exception, l\u00e0m g\u00ec v\u1edbi exception \u0111\u00f3. L\u00e0m 2 th\u1ee9: log l\u1ea1i c\u00e1i l\u1ed7i \u0111\u00f3, \u0111\u1ea9y l\u00ean c\u00e1i kho l\u01b0u tr\u1eef, b\u1eafn v\u1ec1 c\u00e1i l\u1ed7i slack. Return c\u00e1i l\u1ed7i cho ng\u01b0\u1eddi d\u00f9ng, vi\u1ebft l\u1ed7i cho d\u1ec5 hi\u1ec3u v\u00ec n\u1ebfu b\u1eafn l\u1ed7i ra trong code th\u00ec c\u00e1c ng\u01b0\u1eddi d\u00f9ng bi\u1ebft code s\u1ebd bi\u1ebft h\u1ec7 th\u1ed1ng ho\u1ea1t \u0111\u1ed9ng ra sao. Stack trace \u00e1p d\u1ee5ng nguy\u00ean l\u00fd c\u1ee7a stack","title":"X\u1eed l\u00fd ngo\u1ea1i l\u1ec7?"},{"location":"frontend/interview/#trong-cac-thuat-toan-thang-nao-nhanh-nhat","text":"Kh\u00f4ng c\u00f3, tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, trung b\u00ecnh, t\u1ed1t nh\u1ea5t Quick sort \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(nlog(n)) Bubble sort tr\u01b0\u1eddng h\u1ee3p best th\u00ec O(n)","title":"Trong c\u00e1c thu\u1eadt to\u00e1n th\u1eb1ng n\u00e0o nhanh nh\u1ea5t?"},{"location":"frontend/interview/#o-phuc-tap-la-gi","text":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p thu\u1eadt to\u00e1n l\u00e0 \u0111\u1ecbnh l\u01b0\u1ee3ng t\u01b0\u01a1ng \u0111\u1ed1i s\u1ed1 ph\u00e9p to\u00e1n m\u00e0 m\u00e1y t\u00ednh ph\u1ea3i th\u1ef1c hi\u1ec7n.","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 g\u00ec?"},{"location":"frontend/interview/#relative-va-absolute","text":"Cho hai th\u1eb1ng absolute n\u00f3 c\u00f3 m\u1ed1i quan h\u1ec7 cha con Relative d\u1ef1a v\u00e0o v\u1ecb tr\u00ed ban \u0111\u1ea7u c\u1ee7a n\u00f3","title":"Relative v\u00e0 absolute?"},{"location":"frontend/interview/#dom-va-dom-ao","text":"DOM: \u00d4ng Browser nh\u1eadn \u0111\u01b0\u1ee3c file HTML. Browser d\u1ef1a tr\u00ean c\u00e1i quy chu\u1ea9n \u00f4ng \u0111\u00f3 d\u1ecbch HTML th\u00e0nh DOM, d\u1ef1a v\u00e0o quy chu\u1ea9n W3C t\u1ea1o ra m\u00f4 h\u00ecnh d\u1ea1ng c\u00e2y C\u00e1c d\u1ef1 \u00e1n l\u1edbn, DOM Tree r\u1ea5t l\u1edbn, m\u1ed7i khi DOM \u0111\u1ed5i ph\u1ea3i t\u00ednh to\u00e1n l\u1ea1i CSS -> T\u1ed1c \u0111\u1ed9 rendering ch\u1eadm Khi React render, React t\u1ea1o DOM \u1ea3o. Khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i c\u1ee7a state, t\u1ea1o ra DOM \u0111\u1ed5i. Ch\u1ea1y thu\u1eadt to\u00e1n so s\u00e1nh gi\u1eefa DOM c\u0169 v\u00e0 m\u1edbi \u0111\u1ec3 t\u00ecm ra th\u00e0nh ph\u1ea7n \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt. Sau khi ti\u1ebfn h\u00e0nh so s\u00e1nh, ReactDOM render l\u1ea1i c\u00e1c th\u00e0nh ph\u1ea7n c\u1ea7n c\u1eadp nh\u1eadt l\u00ean DOM th\u1eadt.","title":"DOM v\u00e0 DOM \u1ea3o?"},{"location":"frontend/interview/#client-side-va-server-side","text":"CSR (Client side rendering) - SPA (Single Page Application) SSR (Server side rendering) - MPA (Multiple Page Application)","title":"Client side v\u00e0 server side?"},{"location":"frontend/js/","text":"Gi\u1edbi thi\u1ec7u Javascript l\u00e0 scripting language cho Web. Var, let v\u00e0 const Var Tr\u01b0\u1edbc ES6, khai b\u00e1o var \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0ng t\u00ednh n\u0103ng c\u1ee7a var l\u00e0 c\u00f3 th\u1ec3 re-declared v\u00e0 updated v\u00e0 \u0111\u00e2y c\u0169ng t\u1ed3n t\u1ea1i v\u1ea5n \u0111\u1ec1 c\u1ee7a n\u00f3. var greeter = \"hey hi\"; var times = 4; if (times > 3) { var greeter = \"say Hello instead\"; } console.log(greeter) // \"say Hello instead\" Nh\u00ecn v\u00e0o \u0111o\u1ea1n code tr\u00ean n\u1ebfu nh\u01b0 ta khai b\u00e1o greeter nh\u01b0 m\u1ed9t bi\u1ebfn global v\u00e0 trong h\u00e0m l\u1ea1i v\u00f4 t\u00ecnh re-declared bi\u1ebfn th\u00ec c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn bi\u1ebfn kh\u00f4ng mong mu\u1ed1n. Let Let \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y. Let is block scoped, m\u1ed9t block l\u00e0 \u0111o\u1ea1n code trong d\u1ea5u {}, \u0111i\u1ec1u \u0111\u00f3 ngh\u0129a l\u00e0 khi v\u00e0o h\u00e0m hay th\u1eadm ch\u00ed if th\u00ec c\u00e1c khai b\u00e1o s\u1ebd kh\u00e1c bi\u1ec7t v\u1edbi nhau. let greeting = \"say Hi\"; if (true) { let greeting = \"say Hello instead\"; console.log(greeting); // \"say Hello instead\" } console.log(greeting); // \"say Hi\" Const Const c\u00f3 scope t\u01b0\u01a1ng t\u1ef1 let nh\u01b0ng kh\u00f4ng th\u1ec3 updated. Tuy nhi\u00ean \u0111\u1ed1i v\u1edbi object th\u00ec properties c\u1ee7a n\u00f3 c\u00f3 th\u1ec3 updated. const greeting = { message: \"say Hi\", times: 4 } greeting = { words: \"Hello\", number: \"five\" } // error: Assignment to constant variable. greeting.message = \"say Hello instead\"; Callbacks Callback ch\u1ec9 l\u00e0 m\u1ed9t h\u00e0m m\u00e0 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o trong m\u1ed9t h\u00e0m kh\u00e1c, v\u1edbi mong mu\u1ed1n r\u1eb1ng n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ec3 th\u1ef1c thi m\u1ed9t l\u00fac n\u00e0o \u0111\u00f3. Nh\u01b0ng khi c\u00f3 qu\u00e1 nhi\u1ec1u callbacks ch\u1ed3ng v\u00e0o nhau s\u1ebd d\u1eabn \u0111\u1ebfn callback hell, l\u00e0m kh\u00f3 \u0111\u1ecdc v\u00e0 debug. Promise Promise l\u00e0 n\u1ec1n t\u1ea3ng c\u1ee7a x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 trong Javascript. Promise l\u00e0 m\u1ed9t object \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 b\u1edfi m\u1ed9t h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9, \u0111\u1ea1i di\u1ec7n cho tr\u1ea1ng th\u00e1i c\u1ee7a hi\u1ec7n t\u1ea1i. Ch\u00fang ta x\u00e9t \u0111o\u1ea1n code sau: function myFunction() { new Promise(() => { console.log(1); }); console.log(2); } Ta c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 1 v\u00e0 2 v\u00ec ch\u01b0a c\u00f3 x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 t\u1ea1i \u0111\u00e2y. Ta h\u00e3y nh\u00ecn l\u1ea1i \u0111o\u1ea1n code \u0111\u01b0\u1ee3c thay \u0111\u1ed5i m\u1ed9t ch\u00fat function myFunction() { new Promise((myResolve) => { myResolve(1); }).then(value => console.log(value)); console.log(2); } B\u1ea1n c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 l\u00fac n\u00e0y? \u0110\u00e1p \u00e1n l\u00e0 2 v\u00e0 1, t\u1ea1i sao l\u1ea1i nh\u01b0 v\u1eady? Event loop Javascript c\u00f3 m\u1ed9t runtime model d\u1ef1a tr\u00ean event loop, gi\u00fap th\u1ef1c thi code, collect v\u00e0 process events c\u0169ng nh\u01b0 x\u1eed l\u00fd sub-tasks. \u0110i\u1ec1u c\u1ea7n bi\u1ebft l\u00e0 Javascript s\u1eed d\u1ee5ng single-thread run time. \u0110\u1ec3 gi\u00fap x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 \u0111\u00f3 l\u00e0 nh\u1edd v\u00e0o Web APIs, v\u00ed d\u1ee5 nh\u01b0 setTimeout() khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd g\u1ecdi API Timing \u0111\u1ec3 \u0111\u1ebfm v\u00e0 sau khi ho\u00e0n th\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o Callback queue \u0111\u1ec3 x\u1eed l\u00fd. Single-thread n\u00ean stack ch\u1ec9 c\u00f3 1 function \u0111\u01b0\u1ee3c x\u1eed l\u00fd m\u1ed7i l\u1ea7n. V\u00e0 \u0111i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch ph\u1ea7n n\u00e0o cho c\u00e2u h\u1ecfi v\u1ec1 Promise. D\u00f9 myResolve \u0111\u01b0\u1ee3c g\u1ecdi ngay l\u1eadp t\u1ee9c nh\u01b0ng n\u00f3 l\u1ea1i \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o Callback queue v\u00e0 ch\u1ec9 khi stack th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c h\u00e0m v\u00e0 stack r\u1ed7ng queue m\u1edbi \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o \u0111\u1ec3 x\u1eed l\u00fd. function myFunction() { new Promise((myResolve) => { myResolve(1); }).then(value => console.log(value)); console.log(2); console.log(3); console.log(4); console.log(5); } Ta h\u00e3y nh\u00ecn l\u1ea1i v\u00ed d\u1ee5 tr\u00ean. V\u00e0 ch\u1eafc ch\u1eafn r\u1ed3i \u1edf \u0111o\u1ea1n code n\u00e0y \u0111\u00e1p \u00e1n l\u00e0 2, 3, 4, 5, 1 M\u1ed9t trong nh\u1eefng \u0111i\u1ec3m l\u1ee3i c\u1ee7a Promise l\u00e0 tr\u00e1nh callback hell b\u1eb1ng c\u00e1ch d\u00f9ng then chain M\u1ed9t Promise c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong 3 tr\u1ea1ng th\u00e1i sau: pending, fulfilled v\u00e0 rejected v\u00e0 ta c\u00f3 th\u1ec3 d\u00f9ng .then, .catch, .finally \u0111\u1ec3 l\u00e0m callback Ta x\u00e9t m\u1ed9t v\u00ed d\u1ee5 sau: console.log(\"Start\") setTimeout(() => { console.log(\"Timeout!\") }, 0) Promise.resolve(\"Promise!\") .then(res => console.log(res)) console.log(\"End!\") Th\u1eadt s\u1ef1 th\u00ec Event Loop c\u00f3 2 d\u1ea1ng queues: (macro) task queue v\u00e0 (micro) task queue. Trong \u0111\u00f3 (macro) task g\u1ed3m setTimeout, setInterval, setImmediate. Microtask g\u1ed3m Promise callback, ... Trong \u0111\u00f3 microtask s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u01b0\u1edbc macrotask, do \u0111\u00f3 k\u1ebft qu\u1ea3 c\u1ee7a \u0111o\u1ea1n code tr\u00ean l\u00e0 Start! End! Promise! Timeout! Async/Await Khi await \u0111\u01b0\u1ee3c g\u1ecdi, n\u00f3 s\u1ebd \u0111\u1ee3i cho t\u1edbi khi Promise k\u1ebft th\u00fac v\u00e0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3. Thay v\u00ec ph\u1ea3i .then \u0111\u1ec3 g\u1ecdi nh\u01b0 \u1edf Promise th\u00ec ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng lu\u00f4n await c\u00f2n v\u1ec1 try catch th\u00ec c\u00f3 th\u1ec3 try catch th\u1eb3ng \u1edf await thay v\u00ec .then r\u1ed3i .catch Async/Await c\u00f3 th\u1ec3 thay th\u1ebf \u0111\u01b0\u1ee3c Promise Kh\u00f4ng ho\u00e0n to\u00e0n v\u00ec Async/Await v\u1eabn s\u1eed d\u1ee5ng Promise ng\u1ea7m. Ngo\u00e0i ra c\u00f3 m\u1ed9t s\u1ed1 thao t\u00e1c s\u1eed d\u1ee5ng Promise s\u1ebd \u0111em l\u1ea1i hi\u1ec7u qu\u1ea3 t\u1ed1t h\u01a1n async function getABC () { let A = await getValueA(); // getValueA takes 2 second to finish let B = await getValueB(); // getValueB takes 4 second to finish let C = await getValueC(); // getValueC takes 3 second to finish return A * B * C; } Nh\u00ecn v\u00e0o v\u00ed d\u1ee5 tr\u00ean await s\u1ebd d\u1eebng h\u00e0m async \u0111\u1ec3 ch\u1edd cho h\u00e0nh \u0111\u1ed9ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n xong m\u1edbi chuy\u1ec3n sang h\u00e0nh \u0111\u1ed9ng ti\u1ebfp theo n\u00ean t\u1ed5ng th\u1eddi gian \u0111\u1ec3 ho\u00e0n th\u00e0nh l\u00e0 9s. async function getABC () { // Promise.all() allows us to send all requests at the same time. let results = await Promise.all([ getValueA, getValueB, getValueC ]); return results.reduce((total,value) => total * value); } Tuy nhi\u00ean c\u00e1ch t\u1ed1i \u01b0u h\u01a1n l\u00e0 ta cho 3 Promise ch\u1ea1y c\u00f9ng l\u00fac th\u00ec khi \u0111\u00f3 ch\u1ec9 c\u1ea7n ch\u1edd cho h\u00e0nh \u0111\u1ed9ng l\u00e2u nh\u1ea5t ho\u00e0n th\u00e0nh \u1edf \u0111\u00e2y l\u00e0 4s \u0111\u1ec3 th\u1ef1c hi\u1ec7n xong h\u00e0m. T\u1ea5t nhi\u00ean \u0111a s\u1ed1 c\u00e1c tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta s\u1eed d\u1ee5ng Async/Await l\u00e0 cho vi\u1ec7c fetch API v\u00e0 chuy\u1ec3n th\u00e0nh json v\u00e0 n\u00f3 ph\u1ea3i th\u1ef1c hi\u1ec7n li\u00ean t\u1ee5c nhau th\u00ec s\u1ebd kh\u00f4ng s\u1eed d\u1ee5ng Promise.all \u0111\u01b0\u1ee3c \u1edf tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3. Th\u00eam n\u1eefa l\u00e0 khi \u0111\u1ee5ng v\u00e0o t\u1eeb kh\u00f3a await h\u00e0m async s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o microtask \u0111\u1ec3 th\u1ef1c hi\u1ec7n ti\u1ebfp, \u0111i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 c\u00e1c h\u00e0nh \u0111\u1ed9ng kh\u00e1c s\u1ebd ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c ch\u1ea1y ch\u1ec9 c\u00f3 h\u00e0nh \u0111\u1ed9ng trong h\u00e0m async b\u1ecb d\u1eebng l\u1ea1i \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o y\u1ebfu t\u1ed1 b\u1ea5t \u0111\u1ed3ng b\u1ed9 trong JS. this l\u00e0 g\u00ec? C\u00f3 m\u1ed9t \u0111i\u1ec1u ch\u00fang ta bi\u1ebft r\u1eb1ng this refers to an object. Tuy nhi\u00ean this kh\u00f4ng ch\u1ec9 \u0111\u01a1n gi\u1ea3n nh\u01b0 v\u1eady. N\u1ebfu ch\u00fang ta g\u1ecdi this \u1edf browser n\u00f3 s\u1ebd l\u00e0 Window object console.log(this); Nh\u01b0ng n\u1ebfu ch\u00fang ta g\u1ecdi this \u1edf b\u00ean trong m\u1ed9t object th\u00ec \u0111\u00f3 l\u00e0 object \u0111\u00f3 v\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o properties v\u00e0 methods c\u1ee7a ch\u00fang const myObj = { myThis : function() { return this; } } N\u1ebfu g\u1ecdi this trong m\u1ed9t function th\u00ec \u0111\u00f3 s\u1ebd l\u00e0 object Window Arrow functions \u0110i\u1ec1u \u0111\u1eb7t bi\u1ec7t l\u00e0 arrow function kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng v\u1edbi function v\u00ec n\u00f3 kh\u00f4ng t\u1ea1o ra execution context m\u00e0 k\u1ebf th\u1eeba t\u1eeb h\u00e0m ngo\u00e0i arrow function \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a. V\u1eady tr\u01b0\u1edbc h\u1ebft ch\u00fang ta c\u1ea7n t\u00ecm hi\u1ec3u v\u1eady execution context l\u00e0 g\u00ec? Execution Context Execution Context l\u00e0 c\u00e1ch m\u00e0 Javascript \u0111\u01b0\u1ee3c th\u1ef1c thi bao g\u1ed3m creation phase v\u00e0 execution phase. H\u00e3y x\u00e9t v\u00ed d\u1ee5 sau: let x = 10; function timesTen(a){ return a * 10; } let y = timesTen(x); console.log(y); // 100 V\u00e0 \u0111\u00e2y l\u00e0 c\u00e1ch ch\u00fang \u0111\u01b0\u1ee3c th\u1ef1c thi \u1edf creation phase \u0110\u1ea7u ti\u00ean Global Object s\u1ebd \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, r\u1ed3i s\u1ebd \u0111\u01b0\u1ee3c this object bind v\u00e0o. Sau \u0111\u00f3 heap memory s\u1ebd \u0111\u01b0\u1ee3c set up cho bi\u1ebfn v\u00e0 h\u00e0m references. Cu\u1ed1i c\u00f9ng l\u00e0 l\u01b0u c\u00e1c khai b\u00e1o h\u00e0m v\u00e0 c\u00e1c bi\u1ebfn th\u00e0nh undefined. \u0110i\u1ec1u quan tr\u1ecdng \u1edf \u0111\u00e2y l\u00e0 v\u1edbi m\u1ed7i function call, Javascript engine t\u1ea1o ra m\u1ed9t function execution context. C\u0169ng t\u01b0\u01a1ng t\u1ef1 global execution context nh\u01b0ng thay v\u00ec t\u1ea1o global object, arguments object s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o li\u00ean quan \u0111\u1ebfn t\u1ea5t c\u1ea3 bi\u1ebfn c\u1ee7a h\u00e0m. Tr\u1edf v\u1ec1 v\u1edbi arrow function, vi\u1ec7c kh\u00f4ng t\u1ea1o ra execution context nh\u01b0ng nh\u1eadn this t\u1eeb h\u00e0m ngo\u00e0i n\u00f3 c\u0169ng cho this l\u00e0 Window. V\u00e0 \u0111i\u1ec1u c\u1ea7n l\u01b0u \u00fd l\u00e0 ta kh\u00f4ng th\u1ec3 l\u1ea5y ra this n\u1ebfu th\u1ef1c hi\u1ec7n arrow function trong object. V\u00e0 cu\u1ed1i c\u00f9ng this trong Event Listener s\u1ebd li\u00ean quan \u0111\u1ebfn DOM element \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t. this methods C\u00f3 3 methods l\u00e0 call, apply v\u00e0 bind. V\u1edbi call v\u00e0 apply, n\u00f3i theo m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, ch\u00fang ta c\u00f3 th\u1ec3 object n\u00e0o m\u00e0 keyword this refer \u0111\u1ebfn, x\u00e1c \u0111\u1ecbnh tham s\u1ed1 \"this\" cho m\u1ed9t function Bind const myObj = { name: \"Khoi\", age: 20 } function display() { console.log(this.name + \" \" + this.age); } let showData = display.bind(myObj) showData() showData() Call function display(school, hometown) { console.log(this.name + \" \" + this.age + \" \" + school + \" \" + hometown); } display.call(myObj, \"HCMUS\", \"Long An\") Apply function display(school, hometown) { console.log(this.name + \" \" + this.age + \" \" + school + \" \" + hometown); } display.apply(myObj, [\"HCMUS\", \"Long An\"]) Map, filter and reduce Map (thao t\u00e1c v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng, m\u1ea3ng \u0111\u1ec3 thay \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb) const myArray = [1, 2, 3, 4] const myEvenArray= myArray.map(value => value * 2) Filter (Filter m\u1ea3ng n\u1ebfu return true th\u00ec gi\u1eef l\u1ea1i ph\u1ea7n t\u1eed, false th\u00ec lo\u1ea1i) const myEvenArray= myArray.filter(value => { return value % 2 === 0; }) Reduce (T\u00ednh l\u0169y c\u00e1c gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1) IIFE (h\u00e0m g\u1ecdi ngay l\u1eadp t\u1ee9c)","title":"JavaScript"},{"location":"frontend/js/#gioi-thieu","text":"Javascript l\u00e0 scripting language cho Web.","title":"Gi\u1edbi thi\u1ec7u"},{"location":"frontend/js/#var-let-va-const","text":"","title":"Var, let v\u00e0 const"},{"location":"frontend/js/#var","text":"Tr\u01b0\u1edbc ES6, khai b\u00e1o var \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0ng t\u00ednh n\u0103ng c\u1ee7a var l\u00e0 c\u00f3 th\u1ec3 re-declared v\u00e0 updated v\u00e0 \u0111\u00e2y c\u0169ng t\u1ed3n t\u1ea1i v\u1ea5n \u0111\u1ec1 c\u1ee7a n\u00f3. var greeter = \"hey hi\"; var times = 4; if (times > 3) { var greeter = \"say Hello instead\"; } console.log(greeter) // \"say Hello instead\" Nh\u00ecn v\u00e0o \u0111o\u1ea1n code tr\u00ean n\u1ebfu nh\u01b0 ta khai b\u00e1o greeter nh\u01b0 m\u1ed9t bi\u1ebfn global v\u00e0 trong h\u00e0m l\u1ea1i v\u00f4 t\u00ecnh re-declared bi\u1ebfn th\u00ec c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn bi\u1ebfn kh\u00f4ng mong mu\u1ed1n.","title":"Var"},{"location":"frontend/js/#let","text":"Let \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y. Let is block scoped, m\u1ed9t block l\u00e0 \u0111o\u1ea1n code trong d\u1ea5u {}, \u0111i\u1ec1u \u0111\u00f3 ngh\u0129a l\u00e0 khi v\u00e0o h\u00e0m hay th\u1eadm ch\u00ed if th\u00ec c\u00e1c khai b\u00e1o s\u1ebd kh\u00e1c bi\u1ec7t v\u1edbi nhau. let greeting = \"say Hi\"; if (true) { let greeting = \"say Hello instead\"; console.log(greeting); // \"say Hello instead\" } console.log(greeting); // \"say Hi\"","title":"Let"},{"location":"frontend/js/#const","text":"Const c\u00f3 scope t\u01b0\u01a1ng t\u1ef1 let nh\u01b0ng kh\u00f4ng th\u1ec3 updated. Tuy nhi\u00ean \u0111\u1ed1i v\u1edbi object th\u00ec properties c\u1ee7a n\u00f3 c\u00f3 th\u1ec3 updated. const greeting = { message: \"say Hi\", times: 4 } greeting = { words: \"Hello\", number: \"five\" } // error: Assignment to constant variable. greeting.message = \"say Hello instead\";","title":"Const"},{"location":"frontend/js/#callbacks","text":"Callback ch\u1ec9 l\u00e0 m\u1ed9t h\u00e0m m\u00e0 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o trong m\u1ed9t h\u00e0m kh\u00e1c, v\u1edbi mong mu\u1ed1n r\u1eb1ng n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi \u0111\u1ec3 th\u1ef1c thi m\u1ed9t l\u00fac n\u00e0o \u0111\u00f3. Nh\u01b0ng khi c\u00f3 qu\u00e1 nhi\u1ec1u callbacks ch\u1ed3ng v\u00e0o nhau s\u1ebd d\u1eabn \u0111\u1ebfn callback hell, l\u00e0m kh\u00f3 \u0111\u1ecdc v\u00e0 debug.","title":"Callbacks"},{"location":"frontend/js/#promise","text":"Promise l\u00e0 n\u1ec1n t\u1ea3ng c\u1ee7a x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 trong Javascript. Promise l\u00e0 m\u1ed9t object \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 b\u1edfi m\u1ed9t h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9, \u0111\u1ea1i di\u1ec7n cho tr\u1ea1ng th\u00e1i c\u1ee7a hi\u1ec7n t\u1ea1i. Ch\u00fang ta x\u00e9t \u0111o\u1ea1n code sau: function myFunction() { new Promise(() => { console.log(1); }); console.log(2); } Ta c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 1 v\u00e0 2 v\u00ec ch\u01b0a c\u00f3 x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 t\u1ea1i \u0111\u00e2y. Ta h\u00e3y nh\u00ecn l\u1ea1i \u0111o\u1ea1n code \u0111\u01b0\u1ee3c thay \u0111\u1ed5i m\u1ed9t ch\u00fat function myFunction() { new Promise((myResolve) => { myResolve(1); }).then(value => console.log(value)); console.log(2); } B\u1ea1n c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 l\u00fac n\u00e0y? \u0110\u00e1p \u00e1n l\u00e0 2 v\u00e0 1, t\u1ea1i sao l\u1ea1i nh\u01b0 v\u1eady?","title":"Promise"},{"location":"frontend/js/#event-loop","text":"Javascript c\u00f3 m\u1ed9t runtime model d\u1ef1a tr\u00ean event loop, gi\u00fap th\u1ef1c thi code, collect v\u00e0 process events c\u0169ng nh\u01b0 x\u1eed l\u00fd sub-tasks. \u0110i\u1ec1u c\u1ea7n bi\u1ebft l\u00e0 Javascript s\u1eed d\u1ee5ng single-thread run time. \u0110\u1ec3 gi\u00fap x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 \u0111\u00f3 l\u00e0 nh\u1edd v\u00e0o Web APIs, v\u00ed d\u1ee5 nh\u01b0 setTimeout() khi \u0111\u01b0\u1ee3c g\u1ecdi s\u1ebd g\u1ecdi API Timing \u0111\u1ec3 \u0111\u1ebfm v\u00e0 sau khi ho\u00e0n th\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o Callback queue \u0111\u1ec3 x\u1eed l\u00fd. Single-thread n\u00ean stack ch\u1ec9 c\u00f3 1 function \u0111\u01b0\u1ee3c x\u1eed l\u00fd m\u1ed7i l\u1ea7n. V\u00e0 \u0111i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i th\u00edch ph\u1ea7n n\u00e0o cho c\u00e2u h\u1ecfi v\u1ec1 Promise. D\u00f9 myResolve \u0111\u01b0\u1ee3c g\u1ecdi ngay l\u1eadp t\u1ee9c nh\u01b0ng n\u00f3 l\u1ea1i \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o Callback queue v\u00e0 ch\u1ec9 khi stack th\u1ef1c hi\u1ec7n t\u1ea5t c\u1ea3 c\u00e1c h\u00e0m v\u00e0 stack r\u1ed7ng queue m\u1edbi \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o \u0111\u1ec3 x\u1eed l\u00fd. function myFunction() { new Promise((myResolve) => { myResolve(1); }).then(value => console.log(value)); console.log(2); console.log(3); console.log(4); console.log(5); } Ta h\u00e3y nh\u00ecn l\u1ea1i v\u00ed d\u1ee5 tr\u00ean. V\u00e0 ch\u1eafc ch\u1eafn r\u1ed3i \u1edf \u0111o\u1ea1n code n\u00e0y \u0111\u00e1p \u00e1n l\u00e0 2, 3, 4, 5, 1 M\u1ed9t trong nh\u1eefng \u0111i\u1ec3m l\u1ee3i c\u1ee7a Promise l\u00e0 tr\u00e1nh callback hell b\u1eb1ng c\u00e1ch d\u00f9ng then chain M\u1ed9t Promise c\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong 3 tr\u1ea1ng th\u00e1i sau: pending, fulfilled v\u00e0 rejected v\u00e0 ta c\u00f3 th\u1ec3 d\u00f9ng .then, .catch, .finally \u0111\u1ec3 l\u00e0m callback Ta x\u00e9t m\u1ed9t v\u00ed d\u1ee5 sau: console.log(\"Start\") setTimeout(() => { console.log(\"Timeout!\") }, 0) Promise.resolve(\"Promise!\") .then(res => console.log(res)) console.log(\"End!\") Th\u1eadt s\u1ef1 th\u00ec Event Loop c\u00f3 2 d\u1ea1ng queues: (macro) task queue v\u00e0 (micro) task queue. Trong \u0111\u00f3 (macro) task g\u1ed3m setTimeout, setInterval, setImmediate. Microtask g\u1ed3m Promise callback, ... Trong \u0111\u00f3 microtask s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u01b0\u1edbc macrotask, do \u0111\u00f3 k\u1ebft qu\u1ea3 c\u1ee7a \u0111o\u1ea1n code tr\u00ean l\u00e0 Start! End! Promise! Timeout!","title":"Event loop"},{"location":"frontend/js/#asyncawait","text":"Khi await \u0111\u01b0\u1ee3c g\u1ecdi, n\u00f3 s\u1ebd \u0111\u1ee3i cho t\u1edbi khi Promise k\u1ebft th\u00fac v\u00e0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3. Thay v\u00ec ph\u1ea3i .then \u0111\u1ec3 g\u1ecdi nh\u01b0 \u1edf Promise th\u00ec ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng lu\u00f4n await c\u00f2n v\u1ec1 try catch th\u00ec c\u00f3 th\u1ec3 try catch th\u1eb3ng \u1edf await thay v\u00ec .then r\u1ed3i .catch","title":"Async/Await"},{"location":"frontend/js/#asyncawait-co-the-thay-the-uoc-promise","text":"Kh\u00f4ng ho\u00e0n to\u00e0n v\u00ec Async/Await v\u1eabn s\u1eed d\u1ee5ng Promise ng\u1ea7m. Ngo\u00e0i ra c\u00f3 m\u1ed9t s\u1ed1 thao t\u00e1c s\u1eed d\u1ee5ng Promise s\u1ebd \u0111em l\u1ea1i hi\u1ec7u qu\u1ea3 t\u1ed1t h\u01a1n async function getABC () { let A = await getValueA(); // getValueA takes 2 second to finish let B = await getValueB(); // getValueB takes 4 second to finish let C = await getValueC(); // getValueC takes 3 second to finish return A * B * C; } Nh\u00ecn v\u00e0o v\u00ed d\u1ee5 tr\u00ean await s\u1ebd d\u1eebng h\u00e0m async \u0111\u1ec3 ch\u1edd cho h\u00e0nh \u0111\u1ed9ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n xong m\u1edbi chuy\u1ec3n sang h\u00e0nh \u0111\u1ed9ng ti\u1ebfp theo n\u00ean t\u1ed5ng th\u1eddi gian \u0111\u1ec3 ho\u00e0n th\u00e0nh l\u00e0 9s. async function getABC () { // Promise.all() allows us to send all requests at the same time. let results = await Promise.all([ getValueA, getValueB, getValueC ]); return results.reduce((total,value) => total * value); } Tuy nhi\u00ean c\u00e1ch t\u1ed1i \u01b0u h\u01a1n l\u00e0 ta cho 3 Promise ch\u1ea1y c\u00f9ng l\u00fac th\u00ec khi \u0111\u00f3 ch\u1ec9 c\u1ea7n ch\u1edd cho h\u00e0nh \u0111\u1ed9ng l\u00e2u nh\u1ea5t ho\u00e0n th\u00e0nh \u1edf \u0111\u00e2y l\u00e0 4s \u0111\u1ec3 th\u1ef1c hi\u1ec7n xong h\u00e0m. T\u1ea5t nhi\u00ean \u0111a s\u1ed1 c\u00e1c tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta s\u1eed d\u1ee5ng Async/Await l\u00e0 cho vi\u1ec7c fetch API v\u00e0 chuy\u1ec3n th\u00e0nh json v\u00e0 n\u00f3 ph\u1ea3i th\u1ef1c hi\u1ec7n li\u00ean t\u1ee5c nhau th\u00ec s\u1ebd kh\u00f4ng s\u1eed d\u1ee5ng Promise.all \u0111\u01b0\u1ee3c \u1edf tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3. Th\u00eam n\u1eefa l\u00e0 khi \u0111\u1ee5ng v\u00e0o t\u1eeb kh\u00f3a await h\u00e0m async s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o microtask \u0111\u1ec3 th\u1ef1c hi\u1ec7n ti\u1ebfp, \u0111i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 c\u00e1c h\u00e0nh \u0111\u1ed9ng kh\u00e1c s\u1ebd ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c ch\u1ea1y ch\u1ec9 c\u00f3 h\u00e0nh \u0111\u1ed9ng trong h\u00e0m async b\u1ecb d\u1eebng l\u1ea1i \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o y\u1ebfu t\u1ed1 b\u1ea5t \u0111\u1ed3ng b\u1ed9 trong JS.","title":"Async/Await c\u00f3 th\u1ec3 thay th\u1ebf \u0111\u01b0\u1ee3c Promise"},{"location":"frontend/js/#this-la-gi","text":"C\u00f3 m\u1ed9t \u0111i\u1ec1u ch\u00fang ta bi\u1ebft r\u1eb1ng this refers to an object. Tuy nhi\u00ean this kh\u00f4ng ch\u1ec9 \u0111\u01a1n gi\u1ea3n nh\u01b0 v\u1eady. N\u1ebfu ch\u00fang ta g\u1ecdi this \u1edf browser n\u00f3 s\u1ebd l\u00e0 Window object console.log(this); Nh\u01b0ng n\u1ebfu ch\u00fang ta g\u1ecdi this \u1edf b\u00ean trong m\u1ed9t object th\u00ec \u0111\u00f3 l\u00e0 object \u0111\u00f3 v\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o properties v\u00e0 methods c\u1ee7a ch\u00fang const myObj = { myThis : function() { return this; } } N\u1ebfu g\u1ecdi this trong m\u1ed9t function th\u00ec \u0111\u00f3 s\u1ebd l\u00e0 object Window","title":"this l\u00e0 g\u00ec?"},{"location":"frontend/js/#arrow-functions","text":"\u0110i\u1ec1u \u0111\u1eb7t bi\u1ec7t l\u00e0 arrow function kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng v\u1edbi function v\u00ec n\u00f3 kh\u00f4ng t\u1ea1o ra execution context m\u00e0 k\u1ebf th\u1eeba t\u1eeb h\u00e0m ngo\u00e0i arrow function \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a. V\u1eady tr\u01b0\u1edbc h\u1ebft ch\u00fang ta c\u1ea7n t\u00ecm hi\u1ec3u v\u1eady execution context l\u00e0 g\u00ec?","title":"Arrow functions"},{"location":"frontend/js/#execution-context","text":"Execution Context l\u00e0 c\u00e1ch m\u00e0 Javascript \u0111\u01b0\u1ee3c th\u1ef1c thi bao g\u1ed3m creation phase v\u00e0 execution phase. H\u00e3y x\u00e9t v\u00ed d\u1ee5 sau: let x = 10; function timesTen(a){ return a * 10; } let y = timesTen(x); console.log(y); // 100 V\u00e0 \u0111\u00e2y l\u00e0 c\u00e1ch ch\u00fang \u0111\u01b0\u1ee3c th\u1ef1c thi \u1edf creation phase \u0110\u1ea7u ti\u00ean Global Object s\u1ebd \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, r\u1ed3i s\u1ebd \u0111\u01b0\u1ee3c this object bind v\u00e0o. Sau \u0111\u00f3 heap memory s\u1ebd \u0111\u01b0\u1ee3c set up cho bi\u1ebfn v\u00e0 h\u00e0m references. Cu\u1ed1i c\u00f9ng l\u00e0 l\u01b0u c\u00e1c khai b\u00e1o h\u00e0m v\u00e0 c\u00e1c bi\u1ebfn th\u00e0nh undefined. \u0110i\u1ec1u quan tr\u1ecdng \u1edf \u0111\u00e2y l\u00e0 v\u1edbi m\u1ed7i function call, Javascript engine t\u1ea1o ra m\u1ed9t function execution context. C\u0169ng t\u01b0\u01a1ng t\u1ef1 global execution context nh\u01b0ng thay v\u00ec t\u1ea1o global object, arguments object s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o li\u00ean quan \u0111\u1ebfn t\u1ea5t c\u1ea3 bi\u1ebfn c\u1ee7a h\u00e0m. Tr\u1edf v\u1ec1 v\u1edbi arrow function, vi\u1ec7c kh\u00f4ng t\u1ea1o ra execution context nh\u01b0ng nh\u1eadn this t\u1eeb h\u00e0m ngo\u00e0i n\u00f3 c\u0169ng cho this l\u00e0 Window. V\u00e0 \u0111i\u1ec1u c\u1ea7n l\u01b0u \u00fd l\u00e0 ta kh\u00f4ng th\u1ec3 l\u1ea5y ra this n\u1ebfu th\u1ef1c hi\u1ec7n arrow function trong object. V\u00e0 cu\u1ed1i c\u00f9ng this trong Event Listener s\u1ebd li\u00ean quan \u0111\u1ebfn DOM element \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t.","title":"Execution Context"},{"location":"frontend/js/#this-methods","text":"C\u00f3 3 methods l\u00e0 call, apply v\u00e0 bind. V\u1edbi call v\u00e0 apply, n\u00f3i theo m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, ch\u00fang ta c\u00f3 th\u1ec3 object n\u00e0o m\u00e0 keyword this refer \u0111\u1ebfn, x\u00e1c \u0111\u1ecbnh tham s\u1ed1 \"this\" cho m\u1ed9t function","title":"this methods"},{"location":"frontend/js/#bind","text":"const myObj = { name: \"Khoi\", age: 20 } function display() { console.log(this.name + \" \" + this.age); } let showData = display.bind(myObj) showData() showData()","title":"Bind"},{"location":"frontend/js/#call","text":"function display(school, hometown) { console.log(this.name + \" \" + this.age + \" \" + school + \" \" + hometown); } display.call(myObj, \"HCMUS\", \"Long An\")","title":"Call"},{"location":"frontend/js/#apply","text":"function display(school, hometown) { console.log(this.name + \" \" + this.age + \" \" + school + \" \" + hometown); } display.apply(myObj, [\"HCMUS\", \"Long An\"])","title":"Apply"},{"location":"frontend/js/#map-filter-and-reduce","text":"","title":"Map, filter and reduce"},{"location":"frontend/js/#map-thao-tac-voi-oi-tuong-mang-e-thay-oi-cac-gia-tri","text":"const myArray = [1, 2, 3, 4] const myEvenArray= myArray.map(value => value * 2)","title":"Map (thao t\u00e1c v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng, m\u1ea3ng \u0111\u1ec3 thay \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb)"},{"location":"frontend/js/#filter-filter-mang-neu-return-true-thi-giu-lai-phan-tu-false-thi-loai","text":"const myEvenArray= myArray.filter(value => { return value % 2 === 0; })","title":"Filter (Filter m\u1ea3ng n\u1ebfu return true th\u00ec gi\u1eef l\u1ea1i ph\u1ea7n t\u1eed, false th\u00ec lo\u1ea1i)"},{"location":"frontend/js/#reduce-tinh-luy-cac-gia-tri-tra-ve","text":"","title":"Reduce (T\u00ednh l\u0169y c\u00e1c gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1)"},{"location":"frontend/js/#iife-ham-goi-ngay-lap-tuc","text":"","title":"IIFE (h\u00e0m g\u1ecdi ngay l\u1eadp t\u1ee9c)"},{"location":"fundamentals/git/","text":"Development \u0110\u1ed1i v\u1edbi c\u00e1c t\u00e1c v\u1ee5 c\u01a1 b\u1ea3n, ch\u1ec9 c\u1ea7n nh\u1edb 3 c\u00e2u l\u1ec7nh c\u01a1 b\u1ea3n: git add . git commit -m \"Chore: update files\" git push origin develop \u0110\u1ec3 t\u1ea1o nh\u00e1nh m\u1edbi, switch nh\u00e1nh s\u1eed d\u1ee5ng: git checkout -b \"feature/827-show-product-list\" Pull request N\u1ebfu \u0111\u00f3 l\u00e0 task: Minor: [ticket-number] - [description] VD: Minor: 827 - show product list N\u1ebfu \u0111\u00f3 l\u00e0 bug: Patch: [ticket-number] - [description] VD: Patch: 828 - Product not show Stash Tr\u01b0\u1eddng h\u1ee3p kh\u00e1 th\u01b0\u1eddng g\u1eb7p l\u00e0 ch\u00fang ta code th\u1eb3ng l\u00ean nh\u00e1nh develop khi th\u1ef1c hi\u1ec7n m\u1ed9t task m\u1edbi. Khi nh\u1eadn ra th\u00ec ch\u00fang ta ph\u1ea3i checkout \u0111\u1ec3 t\u1ea1o nh\u00e1nh m\u1edbi nh\u01b0ng git y\u00eau c\u1ea7u ph\u1ea3i commit tr\u01b0\u1edbc khi checkout. Khi \u0111\u00f3 ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng 2 c\u00e2u l\u1ec7nh sau: git stash git stash pop Cherry pick Trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p sau khi deploy l\u00ean test site ho\u1eb7c production. N\u1ebfu ph\u00e1t hi\u1ec7n ra m\u1ed9t bug m\u1edbi, ngo\u00e0i vi\u1ec7c PR v\u00e0o dev branch, ch\u00fang ta c\u1ea7n cherry pick v\u00e0o test site ho\u1eb7c production. Khi \u0111\u00f3 ta s\u1eed d\u1ee5ng: git cherry-pick commitSha Merge v\u00e0 rebase Gi\u1ea3 s\u1eeda ch\u00fang ta c\u00f3 nh\u00e1nh develop v\u00e0 feature. Trong h\u1ea7u h\u1ebft c\u00e1c h\u1ee3p merge s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, c\u00e1ch merge l\u00e0m l\u00e0 t\u1ea1o m\u1ed9t commit merge c\u00f9ng v\u1edbi c\u00e1c commit t\u1eeb feature v\u00e0o develop. Rebase gi\u00fap cho l\u1ecbch s\u1eed commit \u0111\u1eb9p h\u01a1n khi thay v\u00ec t\u1ea1o m\u1ed9t merge commit, n\u00f3 s\u1ebd s\u1eafp x\u1ebfp v\u00e0o develop. \u0110i\u1ec1u n\u00e0y gi\u1ed1ng nh\u01b0 vi\u1ec7c ch\u00fang ta cherry pick t\u1eebng commit v\u00e0o develop. Commit nh\u1ea7m message git commit --amend","title":"Git"},{"location":"fundamentals/git/#development","text":"\u0110\u1ed1i v\u1edbi c\u00e1c t\u00e1c v\u1ee5 c\u01a1 b\u1ea3n, ch\u1ec9 c\u1ea7n nh\u1edb 3 c\u00e2u l\u1ec7nh c\u01a1 b\u1ea3n: git add . git commit -m \"Chore: update files\" git push origin develop \u0110\u1ec3 t\u1ea1o nh\u00e1nh m\u1edbi, switch nh\u00e1nh s\u1eed d\u1ee5ng: git checkout -b \"feature/827-show-product-list\"","title":"Development"},{"location":"fundamentals/git/#pull-request","text":"N\u1ebfu \u0111\u00f3 l\u00e0 task: Minor: [ticket-number] - [description] VD: Minor: 827 - show product list N\u1ebfu \u0111\u00f3 l\u00e0 bug: Patch: [ticket-number] - [description] VD: Patch: 828 - Product not show","title":"Pull request"},{"location":"fundamentals/git/#stash","text":"Tr\u01b0\u1eddng h\u1ee3p kh\u00e1 th\u01b0\u1eddng g\u1eb7p l\u00e0 ch\u00fang ta code th\u1eb3ng l\u00ean nh\u00e1nh develop khi th\u1ef1c hi\u1ec7n m\u1ed9t task m\u1edbi. Khi nh\u1eadn ra th\u00ec ch\u00fang ta ph\u1ea3i checkout \u0111\u1ec3 t\u1ea1o nh\u00e1nh m\u1edbi nh\u01b0ng git y\u00eau c\u1ea7u ph\u1ea3i commit tr\u01b0\u1edbc khi checkout. Khi \u0111\u00f3 ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng 2 c\u00e2u l\u1ec7nh sau: git stash git stash pop","title":"Stash"},{"location":"fundamentals/git/#cherry-pick","text":"Trong c\u00e1c tr\u01b0\u1eddng h\u1ee3p sau khi deploy l\u00ean test site ho\u1eb7c production. N\u1ebfu ph\u00e1t hi\u1ec7n ra m\u1ed9t bug m\u1edbi, ngo\u00e0i vi\u1ec7c PR v\u00e0o dev branch, ch\u00fang ta c\u1ea7n cherry pick v\u00e0o test site ho\u1eb7c production. Khi \u0111\u00f3 ta s\u1eed d\u1ee5ng: git cherry-pick commitSha","title":"Cherry pick"},{"location":"fundamentals/git/#merge-va-rebase","text":"Gi\u1ea3 s\u1eeda ch\u00fang ta c\u00f3 nh\u00e1nh develop v\u00e0 feature. Trong h\u1ea7u h\u1ebft c\u00e1c h\u1ee3p merge s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, c\u00e1ch merge l\u00e0m l\u00e0 t\u1ea1o m\u1ed9t commit merge c\u00f9ng v\u1edbi c\u00e1c commit t\u1eeb feature v\u00e0o develop. Rebase gi\u00fap cho l\u1ecbch s\u1eed commit \u0111\u1eb9p h\u01a1n khi thay v\u00ec t\u1ea1o m\u1ed9t merge commit, n\u00f3 s\u1ebd s\u1eafp x\u1ebfp v\u00e0o develop. \u0110i\u1ec1u n\u00e0y gi\u1ed1ng nh\u01b0 vi\u1ec7c ch\u00fang ta cherry pick t\u1eebng commit v\u00e0o develop.","title":"Merge v\u00e0 rebase"},{"location":"fundamentals/git/#commit-nham-message","text":"git commit --amend","title":"Commit nh\u1ea7m message"},{"location":"fundamentals/python/","text":"T\u1ed5ng quan v\u1ec1 Python Python l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh c\u1ea5p cao, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 th\u00f4ng d\u1ecbch. \u0110i\u1ec3m m\u1ea1nh c\u1ee7a Python l\u00e0 d\u1ec5 h\u1ecdc v\u00e0 \u0111a d\u1ee5ng. Data Types Text Type: str Numeric Types: int, float, complex Sequence Types: list, tuple, range Mapping Type: dict Set Types: set, fronzenset Boolean Type: bool Binary Types: bytes, bytearray, memoryview None Type: NoneType Tuple M\u00ecnh ch\u1ec9 n\u00f3i k\u0129 v\u1ec1 tuple v\u00ec c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u00f2n l\u1ea1i kh\u00e1 t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c. Tuple kh\u00e1c bi\u1ec7t \u1edf ch\u1ed7 n\u00f3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp v\u00e0 kh\u00f4ng \u0111\u1ed5i ngh\u0129a l\u00e0 ta kh\u00f4ng th\u1ec3 th\u00eam, x\u00f3a, s\u1eeda c\u00e1c ph\u1ea7n t\u1eed trong tuple. Nh\u01b0ng n\u1ebfu ta th\u1ef1c mu\u1ed1n l\u00e0m \u0111i\u1ec1u \u0111\u00f3 th\u00ec c\u00f3 2 c\u00e1ch l\u00e0 chuy\u1ec3n th\u00e0nh list \u0111\u1ec3 thao t\u00e1c v\u00e0 c\u1ed9ng 2 tuple v\u1edbi nhau. Tuy nhi\u00ean khi c\u1ed9ng l\u01b0u \u00fd r\u1eb1ng (1) v\u00e0 (1, ) ho\u00e0n to\u00e0n kh\u00e1c nhau. Trong khi (1) v\u1eabn l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u int v\u00e0 (1, ) m\u1edbi l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u tuple Note: m\u1ed9t \u0111i\u1ec1u kh\u00e1 \u0111\u1eb7c tr\u01b0ng \u1edf Python l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u list, dict, tuple c\u00f3 th\u1ec3 l\u01b0u ph\u1ea7n t\u1eed b\u1ea5t k\u1ec3 ki\u1ec3u d\u1eef li\u1ec7u nh\u01b0 (1, \"two\", True) Decorator Decorator l\u00e0 m\u1ed9t design pattern m\u00e0 \u0111\u00ednh th\u00eam tr\u00e1ch nhi\u1ec7m v\u00e0o m\u1ed9t object. Trong Python, t\u1ea5t c\u1ea3 \u0111\u1ec1u l\u00e0 object, v\u00e0 h\u00e0m hay class \u0111\u1ec1u l\u00e0 callable objects (nh\u1eadn v\u00e0o v\u00e0 tr\u1ea3 v\u1ec1 object). def uppercase_decorator(function): def wrapper(): func = function() make_uppercase = func.upper() return make_uppercase return wrapper def say_hi(): return 'hello there' decorate = uppercase_decorator(say_hi) print(decorate()) Nh\u00ecn v\u00e0o v\u00ed d\u1ee5 tr\u00ean ta c\u00f3 th\u1ec3 h\u00ecnh dung c\u00e1ch m\u00e0 m\u1ed9t h\u00e0m nh\u1eadn v\u00e0o h\u00e0m kh\u00e1c nh\u01b0 l\u00e0 m\u1ed9t tham s\u1ed1 v\u00e0 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ch\u00fang trong ph\u1ea1m vi to\u00e0n h\u00e0m (k\u1ec3 c\u1ea3 h\u00e0m trong h\u00e0m). def uppercase_decorator(function): def wrapper(): func = function() make_uppercase = func.upper() return make_uppercase return wrapper @uppercase_decorator def say_hi(): return 'hello there' print(say_hi()) V\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch decorator th\u1ef1c hi\u1ec7n v\u1edbi nhi\u1ec7m v\u1ee5 t\u01b0\u01a1ng t\u1ef1 v\u00ed d\u1ee5 tr\u00ean. V\u1eady khi n\u00e0o th\u00ec ta s\u1eed d\u1ee5ng decorator? Th\u01b0\u1eddng th\u00ec ch\u00fang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho m\u1ee5c \u0111\u00edch logging v\u00e0 time measurement. Ngo\u00e0i ra khi ta c\u00f3 nh\u1eefng t\u00e1c v\u1ee5 l\u1eb7p l\u1ea1i nhau nh\u01b0 m\u1ed7i khi x\u1eed l\u00fd d\u1eef li\u1ec7u ph\u1ea3i connect t\u1edbi database th\u00ec ta c\u00f3 th\u1ec3 th\u00eam v\u00e0o h\u00e0m x\u1eed l\u00fd.","title":"Python"},{"location":"fundamentals/python/#tong-quan-ve-python","text":"Python l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh c\u1ea5p cao, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 th\u00f4ng d\u1ecbch. \u0110i\u1ec3m m\u1ea1nh c\u1ee7a Python l\u00e0 d\u1ec5 h\u1ecdc v\u00e0 \u0111a d\u1ee5ng.","title":"T\u1ed5ng quan v\u1ec1 Python"},{"location":"fundamentals/python/#data-types","text":"Text Type: str Numeric Types: int, float, complex Sequence Types: list, tuple, range Mapping Type: dict Set Types: set, fronzenset Boolean Type: bool Binary Types: bytes, bytearray, memoryview None Type: NoneType","title":"Data Types"},{"location":"fundamentals/python/#tuple","text":"M\u00ecnh ch\u1ec9 n\u00f3i k\u0129 v\u1ec1 tuple v\u00ec c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u00f2n l\u1ea1i kh\u00e1 t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c. Tuple kh\u00e1c bi\u1ec7t \u1edf ch\u1ed7 n\u00f3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp v\u00e0 kh\u00f4ng \u0111\u1ed5i ngh\u0129a l\u00e0 ta kh\u00f4ng th\u1ec3 th\u00eam, x\u00f3a, s\u1eeda c\u00e1c ph\u1ea7n t\u1eed trong tuple. Nh\u01b0ng n\u1ebfu ta th\u1ef1c mu\u1ed1n l\u00e0m \u0111i\u1ec1u \u0111\u00f3 th\u00ec c\u00f3 2 c\u00e1ch l\u00e0 chuy\u1ec3n th\u00e0nh list \u0111\u1ec3 thao t\u00e1c v\u00e0 c\u1ed9ng 2 tuple v\u1edbi nhau. Tuy nhi\u00ean khi c\u1ed9ng l\u01b0u \u00fd r\u1eb1ng (1) v\u00e0 (1, ) ho\u00e0n to\u00e0n kh\u00e1c nhau. Trong khi (1) v\u1eabn l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u int v\u00e0 (1, ) m\u1edbi l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u tuple Note: m\u1ed9t \u0111i\u1ec1u kh\u00e1 \u0111\u1eb7c tr\u01b0ng \u1edf Python l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u list, dict, tuple c\u00f3 th\u1ec3 l\u01b0u ph\u1ea7n t\u1eed b\u1ea5t k\u1ec3 ki\u1ec3u d\u1eef li\u1ec7u nh\u01b0 (1, \"two\", True)","title":"Tuple"},{"location":"fundamentals/python/#decorator","text":"Decorator l\u00e0 m\u1ed9t design pattern m\u00e0 \u0111\u00ednh th\u00eam tr\u00e1ch nhi\u1ec7m v\u00e0o m\u1ed9t object. Trong Python, t\u1ea5t c\u1ea3 \u0111\u1ec1u l\u00e0 object, v\u00e0 h\u00e0m hay class \u0111\u1ec1u l\u00e0 callable objects (nh\u1eadn v\u00e0o v\u00e0 tr\u1ea3 v\u1ec1 object). def uppercase_decorator(function): def wrapper(): func = function() make_uppercase = func.upper() return make_uppercase return wrapper def say_hi(): return 'hello there' decorate = uppercase_decorator(say_hi) print(decorate()) Nh\u00ecn v\u00e0o v\u00ed d\u1ee5 tr\u00ean ta c\u00f3 th\u1ec3 h\u00ecnh dung c\u00e1ch m\u00e0 m\u1ed9t h\u00e0m nh\u1eadn v\u00e0o h\u00e0m kh\u00e1c nh\u01b0 l\u00e0 m\u1ed9t tham s\u1ed1 v\u00e0 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ch\u00fang trong ph\u1ea1m vi to\u00e0n h\u00e0m (k\u1ec3 c\u1ea3 h\u00e0m trong h\u00e0m). def uppercase_decorator(function): def wrapper(): func = function() make_uppercase = func.upper() return make_uppercase return wrapper @uppercase_decorator def say_hi(): return 'hello there' print(say_hi()) V\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch decorator th\u1ef1c hi\u1ec7n v\u1edbi nhi\u1ec7m v\u1ee5 t\u01b0\u01a1ng t\u1ef1 v\u00ed d\u1ee5 tr\u00ean. V\u1eady khi n\u00e0o th\u00ec ta s\u1eed d\u1ee5ng decorator? Th\u01b0\u1eddng th\u00ec ch\u00fang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho m\u1ee5c \u0111\u00edch logging v\u00e0 time measurement. Ngo\u00e0i ra khi ta c\u00f3 nh\u1eefng t\u00e1c v\u1ee5 l\u1eb7p l\u1ea1i nhau nh\u01b0 m\u1ed7i khi x\u1eed l\u00fd d\u1eef li\u1ec7u ph\u1ea3i connect t\u1edbi database th\u00ec ta c\u00f3 th\u1ec3 th\u00eam v\u00e0o h\u00e0m x\u1eed l\u00fd.","title":"Decorator"}]}